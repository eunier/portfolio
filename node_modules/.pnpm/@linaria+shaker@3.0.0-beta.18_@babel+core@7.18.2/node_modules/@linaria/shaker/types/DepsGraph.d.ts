import { types as t } from '@babel/core';
import ScopeManager, { PromisedNode } from './scope';
export default class DepsGraph {
    protected scope: ScopeManager;
    readonly imports: Map<string, (t.Identifier | t.StringLiteral)[]>;
    readonly importAliases: Map<t.Identifier, string>;
    readonly importTypes: Map<string, 'wildcard' | 'default' | 'reexport'>;
    readonly reexports: Array<t.Identifier>;
    protected readonly parents: WeakMap<t.Node, t.Node>;
    protected readonly edges: Array<[t.Node, t.Node]>;
    protected readonly exports: Map<string, t.Node>;
    protected readonly dependencies: Map<t.Node, Set<t.Node>>;
    protected readonly dependents: Map<t.Node, Set<t.Node>>;
    private actionQueue;
    private processQueue;
    private getAllReferences;
    constructor(scope: ScopeManager);
    addEdge(dependent: t.Node | PromisedNode, dependency: t.Node | PromisedNode): void;
    addExport(name: string, node: t.Node): void;
    addParent(node: t.Node, parent: t.Node): void;
    getParent(node: t.Node): t.Node | undefined;
    getDependenciesByBinding(id: string): (t.AnyTypeAnnotation | t.ArgumentPlaceholder | t.ArrayExpression | t.ArrayPattern | t.ArrayTypeAnnotation | t.ArrowFunctionExpression | t.AssignmentExpression | t.AssignmentPattern | t.AwaitExpression | t.BigIntLiteral | t.BinaryExpression | t.LogicalExpression | t.BindExpression | t.BlockStatement | t.Program | t.TSModuleBlock | t.CatchClause | t.DoWhileStatement | t.ForInStatement | t.ForStatement | t.FunctionDeclaration | t.FunctionExpression | t.ObjectMethod | t.SwitchStatement | t.WhileStatement | t.ForOfStatement | t.ClassMethod | t.ClassPrivateMethod | t.StaticBlock | t.BooleanLiteral | t.BooleanLiteralTypeAnnotation | t.BooleanTypeAnnotation | t.BreakStatement | t.CallExpression | t.ClassExpression | t.ClassDeclaration | t.ClassBody | t.ClassImplements | t.ClassPrivateProperty | t.ClassProperty | t.ContinueStatement | t.ReturnStatement | t.ThrowStatement | t.ConditionalExpression | t.IfStatement | t.DebuggerStatement | t.DecimalLiteral | t.VariableDeclaration | t.ExportAllDeclaration | t.ExportDefaultDeclaration | t.ExportNamedDeclaration | t.ImportDeclaration | t.DeclareClass | t.DeclareFunction | t.DeclareInterface | t.DeclareModule | t.DeclareModuleExports | t.DeclareTypeAlias | t.DeclareOpaqueType | t.DeclareVariable | t.DeclareExportDeclaration | t.DeclareExportAllDeclaration | t.InterfaceDeclaration | t.OpaqueType | t.TypeAlias | t.EnumDeclaration | t.TSDeclareFunction | t.TSInterfaceDeclaration | t.TSTypeAliasDeclaration | t.TSEnumDeclaration | t.TSModuleDeclaration | t.DeclaredPredicate | t.Decorator | t.Directive | t.DirectiveLiteral | t.DoExpression | t.EmptyStatement | t.EmptyTypeAnnotation | t.EnumBooleanBody | t.EnumNumberBody | t.EnumStringBody | t.EnumSymbolBody | t.EnumBooleanMember | t.EnumDefaultedMember | t.EnumNumberMember | t.EnumStringMember | t.ExistsTypeAnnotation | t.ExportDefaultSpecifier | t.ExportNamespaceSpecifier | t.ExportSpecifier | t.Identifier | t.StringLiteral | t.NumericLiteral | t.NullLiteral | t.RegExpLiteral | t.MemberExpression | t.NewExpression | t.ObjectExpression | t.SequenceExpression | t.ParenthesizedExpression | t.ThisExpression | t.UnaryExpression | t.UpdateExpression | t.MetaProperty | t.Super | t.TaggedTemplateExpression | t.TemplateLiteral | t.YieldExpression | t.Import | t.OptionalMemberExpression | t.OptionalCallExpression | t.TypeCastExpression | t.JSXElement | t.JSXFragment | t.PipelinePrimaryTopicReference | t.RecordExpression | t.TupleExpression | t.ModuleExpression | t.TSAsExpression | t.TSTypeAssertion | t.TSNonNullExpression | t.ExpressionStatement | t.File | t.NullLiteralTypeAnnotation | t.FunctionTypeAnnotation | t.FunctionTypeParam | t.GenericTypeAnnotation | t.InferredPredicate | t.InterfaceExtends | t.InterfaceTypeAnnotation | t.IntersectionTypeAnnotation | t.MixedTypeAnnotation | t.NullableTypeAnnotation | t.NumberLiteralTypeAnnotation | t.NumberTypeAnnotation | t.ObjectTypeAnnotation | t.ObjectTypeInternalSlot | t.ObjectTypeCallProperty | t.ObjectTypeIndexer | t.ObjectTypeProperty | t.ObjectTypeSpreadProperty | t.QualifiedTypeIdentifier | t.StringLiteralTypeAnnotation | t.StringTypeAnnotation | t.SymbolTypeAnnotation | t.ThisTypeAnnotation | t.TupleTypeAnnotation | t.TypeofTypeAnnotation | t.TypeAnnotation | t.TypeParameter | t.TypeParameterDeclaration | t.TypeParameterInstantiation | t.UnionTypeAnnotation | t.Variance | t.VoidTypeAnnotation | t.IndexedAccessType | t.OptionalIndexedAccessType | t.JSXAttribute | t.JSXClosingElement | t.JSXExpressionContainer | t.JSXSpreadChild | t.JSXOpeningElement | t.JSXText | t.JSXOpeningFragment | t.JSXClosingFragment | t.ImportAttribute | t.ImportDefaultSpecifier | t.ImportNamespaceSpecifier | t.ImportSpecifier | t.InterpreterDirective | t.JSXEmptyExpression | t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName | t.JSXSpreadAttribute | t.RestElement | t.ObjectPattern | t.TSParameterProperty | t.LabeledStatement | t.Noop | t.NumberLiteral | t.ObjectProperty | t.PipelineBareFunction | t.PipelineTopicExpression | t.Placeholder | t.PrivateName | t.RegexLiteral | t.RestProperty | t.SpreadElement | t.SpreadProperty | t.TryStatement | t.WithStatement | t.TSImportEqualsDeclaration | t.TSExportAssignment | t.TSNamespaceExportDeclaration | t.SwitchCase | t.TSAnyKeyword | t.TSArrayType | t.TSBooleanKeyword | t.TSBigIntKeyword | t.TSIntrinsicKeyword | t.TSNeverKeyword | t.TSNullKeyword | t.TSNumberKeyword | t.TSObjectKeyword | t.TSStringKeyword | t.TSSymbolKeyword | t.TSUndefinedKeyword | t.TSUnknownKeyword | t.TSVoidKeyword | t.TSThisType | t.TSLiteralType | t.TSCallSignatureDeclaration | t.TSConditionalType | t.TSConstructSignatureDeclaration | t.TSConstructorType | t.TSDeclareMethod | t.TSQualifiedName | t.TSEnumMember | t.TSExpressionWithTypeArguments | t.TSExternalModuleReference | t.TSFunctionType | t.TSImportType | t.TSIndexSignature | t.TSIndexedAccessType | t.TSInferType | t.TSInterfaceBody | t.TSIntersectionType | t.TSMappedType | t.TSMethodSignature | t.TSNamedTupleMember | t.TSOptionalType | t.TSParenthesizedType | t.TSPropertySignature | t.TSRestType | t.TSTupleType | t.TSTypeReference | t.TSTypePredicate | t.TSTypeQuery | t.TSTypeLiteral | t.TSUnionType | t.TSTypeOperator | t.TSTypeAnnotation | t.TSTypeParameter | t.TSTypeParameterDeclaration | t.TSTypeParameterInstantiation | t.TemplateElement | t.V8IntrinsicIdentifier | t.VariableDeclarator)[];
    getDependentsByBinding(id: string): (t.AnyTypeAnnotation | t.ArgumentPlaceholder | t.ArrayExpression | t.ArrayPattern | t.ArrayTypeAnnotation | t.ArrowFunctionExpression | t.AssignmentExpression | t.AssignmentPattern | t.AwaitExpression | t.BigIntLiteral | t.BinaryExpression | t.LogicalExpression | t.BindExpression | t.BlockStatement | t.Program | t.TSModuleBlock | t.CatchClause | t.DoWhileStatement | t.ForInStatement | t.ForStatement | t.FunctionDeclaration | t.FunctionExpression | t.ObjectMethod | t.SwitchStatement | t.WhileStatement | t.ForOfStatement | t.ClassMethod | t.ClassPrivateMethod | t.StaticBlock | t.BooleanLiteral | t.BooleanLiteralTypeAnnotation | t.BooleanTypeAnnotation | t.BreakStatement | t.CallExpression | t.ClassExpression | t.ClassDeclaration | t.ClassBody | t.ClassImplements | t.ClassPrivateProperty | t.ClassProperty | t.ContinueStatement | t.ReturnStatement | t.ThrowStatement | t.ConditionalExpression | t.IfStatement | t.DebuggerStatement | t.DecimalLiteral | t.VariableDeclaration | t.ExportAllDeclaration | t.ExportDefaultDeclaration | t.ExportNamedDeclaration | t.ImportDeclaration | t.DeclareClass | t.DeclareFunction | t.DeclareInterface | t.DeclareModule | t.DeclareModuleExports | t.DeclareTypeAlias | t.DeclareOpaqueType | t.DeclareVariable | t.DeclareExportDeclaration | t.DeclareExportAllDeclaration | t.InterfaceDeclaration | t.OpaqueType | t.TypeAlias | t.EnumDeclaration | t.TSDeclareFunction | t.TSInterfaceDeclaration | t.TSTypeAliasDeclaration | t.TSEnumDeclaration | t.TSModuleDeclaration | t.DeclaredPredicate | t.Decorator | t.Directive | t.DirectiveLiteral | t.DoExpression | t.EmptyStatement | t.EmptyTypeAnnotation | t.EnumBooleanBody | t.EnumNumberBody | t.EnumStringBody | t.EnumSymbolBody | t.EnumBooleanMember | t.EnumDefaultedMember | t.EnumNumberMember | t.EnumStringMember | t.ExistsTypeAnnotation | t.ExportDefaultSpecifier | t.ExportNamespaceSpecifier | t.ExportSpecifier | t.Identifier | t.StringLiteral | t.NumericLiteral | t.NullLiteral | t.RegExpLiteral | t.MemberExpression | t.NewExpression | t.ObjectExpression | t.SequenceExpression | t.ParenthesizedExpression | t.ThisExpression | t.UnaryExpression | t.UpdateExpression | t.MetaProperty | t.Super | t.TaggedTemplateExpression | t.TemplateLiteral | t.YieldExpression | t.Import | t.OptionalMemberExpression | t.OptionalCallExpression | t.TypeCastExpression | t.JSXElement | t.JSXFragment | t.PipelinePrimaryTopicReference | t.RecordExpression | t.TupleExpression | t.ModuleExpression | t.TSAsExpression | t.TSTypeAssertion | t.TSNonNullExpression | t.ExpressionStatement | t.File | t.NullLiteralTypeAnnotation | t.FunctionTypeAnnotation | t.FunctionTypeParam | t.GenericTypeAnnotation | t.InferredPredicate | t.InterfaceExtends | t.InterfaceTypeAnnotation | t.IntersectionTypeAnnotation | t.MixedTypeAnnotation | t.NullableTypeAnnotation | t.NumberLiteralTypeAnnotation | t.NumberTypeAnnotation | t.ObjectTypeAnnotation | t.ObjectTypeInternalSlot | t.ObjectTypeCallProperty | t.ObjectTypeIndexer | t.ObjectTypeProperty | t.ObjectTypeSpreadProperty | t.QualifiedTypeIdentifier | t.StringLiteralTypeAnnotation | t.StringTypeAnnotation | t.SymbolTypeAnnotation | t.ThisTypeAnnotation | t.TupleTypeAnnotation | t.TypeofTypeAnnotation | t.TypeAnnotation | t.TypeParameter | t.TypeParameterDeclaration | t.TypeParameterInstantiation | t.UnionTypeAnnotation | t.Variance | t.VoidTypeAnnotation | t.IndexedAccessType | t.OptionalIndexedAccessType | t.JSXAttribute | t.JSXClosingElement | t.JSXExpressionContainer | t.JSXSpreadChild | t.JSXOpeningElement | t.JSXText | t.JSXOpeningFragment | t.JSXClosingFragment | t.ImportAttribute | t.ImportDefaultSpecifier | t.ImportNamespaceSpecifier | t.ImportSpecifier | t.InterpreterDirective | t.JSXEmptyExpression | t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName | t.JSXSpreadAttribute | t.RestElement | t.ObjectPattern | t.TSParameterProperty | t.LabeledStatement | t.Noop | t.NumberLiteral | t.ObjectProperty | t.PipelineBareFunction | t.PipelineTopicExpression | t.Placeholder | t.PrivateName | t.RegexLiteral | t.RestProperty | t.SpreadElement | t.SpreadProperty | t.TryStatement | t.WithStatement | t.TSImportEqualsDeclaration | t.TSExportAssignment | t.TSNamespaceExportDeclaration | t.SwitchCase | t.TSAnyKeyword | t.TSArrayType | t.TSBooleanKeyword | t.TSBigIntKeyword | t.TSIntrinsicKeyword | t.TSNeverKeyword | t.TSNullKeyword | t.TSNumberKeyword | t.TSObjectKeyword | t.TSStringKeyword | t.TSSymbolKeyword | t.TSUndefinedKeyword | t.TSUnknownKeyword | t.TSVoidKeyword | t.TSThisType | t.TSLiteralType | t.TSCallSignatureDeclaration | t.TSConditionalType | t.TSConstructSignatureDeclaration | t.TSConstructorType | t.TSDeclareMethod | t.TSQualifiedName | t.TSEnumMember | t.TSExpressionWithTypeArguments | t.TSExternalModuleReference | t.TSFunctionType | t.TSImportType | t.TSIndexSignature | t.TSIndexedAccessType | t.TSInferType | t.TSInterfaceBody | t.TSIntersectionType | t.TSMappedType | t.TSMethodSignature | t.TSNamedTupleMember | t.TSOptionalType | t.TSParenthesizedType | t.TSPropertySignature | t.TSRestType | t.TSTupleType | t.TSTypeReference | t.TSTypePredicate | t.TSTypeQuery | t.TSTypeLiteral | t.TSUnionType | t.TSTypeOperator | t.TSTypeAnnotation | t.TSTypeParameter | t.TSTypeParameterDeclaration | t.TSTypeParameterInstantiation | t.TemplateElement | t.V8IntrinsicIdentifier | t.VariableDeclarator)[];
    findDependencies(like: Object): t.Node[];
    findDependents(like: object): t.Node[];
    getDependencies(nodes: t.Node[]): t.Node[];
    getLeaf(name: string): t.Node | undefined;
    getLeaves(only: string[] | null): Array<t.Node | undefined>;
}
