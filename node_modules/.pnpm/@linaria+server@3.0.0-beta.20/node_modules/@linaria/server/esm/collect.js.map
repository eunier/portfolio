{"version":3,"file":"collect.js","names":["postcss","extractClassesFromHtml","html","htmlClasses","regex","match","exec","split","forEach","className","replace","push","RegExp","join","collect","css","animations","Set","other","root","critical","stylesheet","parse","htmlClassesRegExp","isCritical","rule","selector","startsWith","Boolean","handleAtRule","addedToCritical","each","childRule","append","clone","name","remove","walkAtRules","parent","type","walkedAtRules","walkRules","has","add","walkDecls","decl","value","params","toString"],"sources":["../src/collect.ts"],"sourcesContent":["/**\n * This utility extracts critical CSS from given HTML and CSS file to be used in SSR environments\n */\n\nimport type { AtRule, ChildNode } from 'postcss';\nimport postcss from 'postcss';\n\ntype CollectResult = {\n  critical: string;\n  other: string;\n};\n\nconst extractClassesFromHtml = (html: string): RegExp => {\n  const htmlClasses: string[] = [];\n  const regex = /\\s+class=\"([^\"]+)\"/gm;\n  let match = regex.exec(html);\n\n  while (match !== null) {\n    match[1].split(' ').forEach((className) => {\n      // eslint-disable-next-line no-param-reassign\n      className = className.replace(\n        /\\\\|\\^|\\$|\\{|\\}|\\[|\\]|\\(|\\)|\\.|\\*|\\+|\\?|\\|/g,\n        '\\\\$&'\n      );\n      htmlClasses.push(className);\n    });\n    match = regex.exec(html);\n  }\n\n  return new RegExp(htmlClasses.join('|'), 'gm');\n};\n\nexport default function collect(html: string, css: string): CollectResult {\n  const animations = new Set();\n  const other = postcss.root();\n  const critical = postcss.root();\n  const stylesheet = postcss.parse(css);\n  const htmlClassesRegExp = extractClassesFromHtml(html);\n\n  const isCritical = (rule: ChildNode) => {\n    // Only check class names selectors\n    if ('selector' in rule && rule.selector.startsWith('.')) {\n      return Boolean(rule.selector.match(htmlClassesRegExp));\n    }\n\n    return true;\n  };\n\n  const handleAtRule = (rule: AtRule) => {\n    let addedToCritical = false;\n\n    rule.each((childRule) => {\n      if (isCritical(childRule) && !addedToCritical) {\n        critical.append(rule.clone());\n        addedToCritical = true;\n      }\n    });\n\n    if (rule.name === 'keyframes') {\n      return;\n    }\n\n    if (addedToCritical) {\n      rule.remove();\n    } else {\n      other.append(rule);\n    }\n  };\n\n  stylesheet.walkAtRules('font-face', (rule) => {\n    /**\n     * @font-face rules may be defined also in CSS conditional groups (eg. @media)\n     * we want only handle those from top-level, rest will be handled in stylesheet.walkRules\n     */\n    if (rule.parent?.type === 'root') {\n      critical.append(rule);\n    }\n  });\n\n  const walkedAtRules = new Set();\n\n  stylesheet.walkRules((rule) => {\n    if (\n      rule.parent &&\n      'name' in rule.parent &&\n      (rule.parent as { name: string }).name === 'keyframes'\n    ) {\n      return;\n    }\n\n    if (rule.parent?.type === 'atrule') {\n      if (!walkedAtRules.has(rule.parent)) {\n        handleAtRule(rule.parent as AtRule);\n        walkedAtRules.add(rule.parent);\n      }\n      return;\n    }\n\n    if (isCritical(rule)) {\n      critical.append(rule);\n    } else {\n      other.append(rule);\n    }\n  });\n\n  critical.walkDecls(/animation/, (decl) => {\n    animations.add(decl.value.split(' ')[0]);\n  });\n\n  stylesheet.walkAtRules('keyframes', (rule) => {\n    if (animations.has(rule.params)) {\n      critical.append(rule);\n    }\n  });\n\n  return {\n    critical: critical.toString(),\n    other: other.toString(),\n  };\n}\n"],"mappings":"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"}