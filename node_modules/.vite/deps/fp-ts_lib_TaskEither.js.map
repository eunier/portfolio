{
  "version": 3,
  "sources": ["../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/internal.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Apply.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Functor.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Applicative.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Chain.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/FromEither.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Predicate.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Magma.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Eq.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Ord.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Semigroup.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Separated.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Witherable.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Zero.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Option.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Compactable.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/ChainRec.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Either.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/EitherT.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Filterable.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/FromIO.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/FromTask.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/Task.js", "../../.pnpm/fp-ts@2.16.2/node_modules/fp-ts/lib/TaskEither.js"],
  "sourcesContent": ["\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flatMapReader = exports.flatMapTask = exports.flatMapIO = exports.flatMapEither = exports.flatMapOption = exports.flatMapNullable = exports.liftOption = exports.liftNullable = exports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1), true); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n/** @internal */\nvar liftNullable = function (F) {\n    return function (f, onNullable) {\n        return function () {\n            var a = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                a[_i] = arguments[_i];\n            }\n            var o = f.apply(void 0, a);\n            return F.fromEither(o == null ? (0, exports.left)(onNullable.apply(void 0, a)) : (0, exports.right)(o));\n        };\n    };\n};\nexports.liftNullable = liftNullable;\n/** @internal */\nvar liftOption = function (F) {\n    return function (f, onNone) {\n        return function () {\n            var a = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                a[_i] = arguments[_i];\n            }\n            var o = f.apply(void 0, a);\n            return F.fromEither((0, exports.isNone)(o) ? (0, exports.left)(onNone.apply(void 0, a)) : (0, exports.right)(o.value));\n        };\n    };\n};\nexports.liftOption = liftOption;\n/** @internal */\nvar flatMapNullable = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(3, function (self, f, onNullable) {\n        return M.flatMap(self, (0, exports.liftNullable)(F)(f, onNullable));\n    });\n};\nexports.flatMapNullable = flatMapNullable;\n/** @internal */\nvar flatMapOption = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(3, function (self, f, onNone) { return M.flatMap(self, (0, exports.liftOption)(F)(f, onNone)); });\n};\nexports.flatMapOption = flatMapOption;\n/** @internal */\nvar flatMapEither = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromEither(f(a)); });\n    });\n};\nexports.flatMapEither = flatMapEither;\n/** @internal */\nvar flatMapIO = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromIO(f(a)); });\n    });\n};\nexports.flatMapIO = flatMapIO;\n/** @internal */\nvar flatMapTask = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromTask(f(a)); });\n    });\n};\nexports.flatMapTask = flatMapTask;\n/** @internal */\nvar flatMapReader = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromReader(f(a)); });\n    });\n};\nexports.flatMapReader = flatMapReader;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\n/**\n * The `Apply` class provides the `ap` which is used to apply a function to an argument under a type constructor.\n *\n * `Apply` can be used to lift functions of two or more arguments to work on values wrapped with the type constructor\n * `f`.\n *\n * Instances must satisfy the following law in addition to the `Functor` laws:\n *\n * 1. Associative composition: `F.ap(F.ap(F.map(fbc, bc => ab => a => bc(ab(a))), fab), fa) <-> F.ap(fbc, F.ap(fab, fa))`\n *\n * Formally, `Apply` represents a strong lax semi-monoidal endofunctor.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (a: string) => (b: number) => (c: boolean) => a + String(b) + String(c)\n * const fa: O.Option<string> = O.some('s')\n * const fb: O.Option<number> = O.some(1)\n * const fc: O.Option<boolean> = O.some(true)\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     // lift a function\n *     O.some(f),\n *     // apply the first argument\n *     O.ap(fa),\n *     // apply the second argument\n *     O.ap(fb),\n *     // apply the third argument\n *     O.ap(fc)\n *   ),\n *   O.some('s1true')\n * )\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction ap(F, G) {\n    return function (fa) {\n        return function (fab) {\n            return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n        };\n    };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) {\n        return function (first) {\n            return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n        };\n    };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) {\n        return function (fa) {\n            return F.ap(F.map(fa, function (a) { return function (b) {\n                var _a;\n                return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n            }; }), fb);\n        };\n    };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!_.has.call(tupleConstructors, len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asUnit = exports.as = exports.getFunctorComposition = exports.let = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\nfunction let_(F) {\n    return function (name, f) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = f(a), _a));\n    }); }; };\n}\nexports.let = let_;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return (0, function_1.pipe)(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n/** @internal */\nfunction as(F) {\n    return function (self, b) { return F.map(self, function () { return b; }); };\n}\nexports.as = as;\n/** @internal */\nfunction asUnit(F) {\n    var asM = as(F);\n    return function (self) { return asM(self, undefined); };\n}\nexports.asUnit = asUnit;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction getApplicativeMonoid(F) {\n    var f = (0, Apply_1.getApplySemigroup)(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\nexports.getApplicativeMonoid = getApplicativeMonoid;\n/** @deprecated */\nfunction getApplicativeComposition(F, G) {\n    var map = (0, Functor_1.getFunctorComposition)(F, G).map;\n    var _ap = (0, Apply_1.ap)(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return (0, function_1.pipe)(fgab, _ap(fga)); }\n    };\n}\nexports.getApplicativeComposition = getApplicativeComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.tap = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    var tapM = tap(M);\n    return function (f) { return function (first) { return tapM(first, f); }; };\n}\nexports.chainFirst = chainFirst;\n/** @internal */\nfunction tap(M) {\n    return function (first, f) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); };\n}\nexports.tap = tap;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n", "\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tapEither = exports.filterOrElse = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function (a) {\n            return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n        };\n    };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return (0, function_1.flow)(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return (0, function_1.flow)(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction chainFirstEitherK(F, M) {\n    var tapEitherM = tapEither(F, M);\n    return function (f) { return function (ma) { return tapEitherM(ma, f); }; };\n}\nexports.chainFirstEitherK = chainFirstEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) {\n        return function (ma) {\n            return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n        };\n    };\n}\nexports.filterOrElse = filterOrElse;\n/** @internal */\nfunction tapEither(F, M) {\n    var fromEither = fromEitherK(F);\n    var tapM = (0, Chain_1.tap)(M);\n    return function (self, f) { return tapM(self, fromEither(f)); };\n}\nexports.tapEither = tapEither;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.and = exports.or = exports.not = exports.Contravariant = exports.getMonoidAll = exports.getSemigroupAll = exports.getMonoidAny = exports.getSemigroupAny = exports.URI = exports.contramap = void 0;\nvar function_1 = require(\"./function\");\nvar contramap_ = function (predicate, f) { return (0, function_1.pipe)(predicate, (0, exports.contramap)(f)); };\n/**\n * @since 2.11.0\n */\nvar contramap = function (f) {\n    return function (predicate) {\n        return (0, function_1.flow)(f, predicate);\n    };\n};\nexports.contramap = contramap;\n/**\n * @category type lambdas\n * @since 2.11.0\n */\nexports.URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getSemigroupAny = function () { return ({\n    concat: function (first, second) { return (0, function_1.pipe)(first, (0, exports.or)(second)); }\n}); };\nexports.getSemigroupAny = getSemigroupAny;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getMonoidAny = function () { return ({\n    concat: (0, exports.getSemigroupAny)().concat,\n    empty: function_1.constFalse\n}); };\nexports.getMonoidAny = getMonoidAny;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getSemigroupAll = function () { return ({\n    concat: function (first, second) { return (0, function_1.pipe)(first, (0, exports.and)(second)); }\n}); };\nexports.getSemigroupAll = getSemigroupAll;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getMonoidAll = function () { return ({\n    concat: (0, exports.getSemigroupAll)().concat,\n    empty: function_1.constTrue\n}); };\nexports.getMonoidAll = getMonoidAll;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar not = function (predicate) {\n    return function (a) {\n        return !predicate(a);\n    };\n};\nexports.not = not;\n/**\n * @since 2.11.0\n */\nvar or = function (second) {\n    return function (first) {\n        return function (a) {\n            return first(a) || second(a);\n        };\n    };\n};\nexports.or = or;\n/**\n * @since 2.11.0\n */\nvar and = function (second) {\n    return function (first) {\n        return function (a) {\n            return first(a) && second(a);\n        };\n    };\n};\nexports.and = and;\n", "\"use strict\";\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatAll = exports.endo = exports.filterSecond = exports.filterFirst = exports.reverse = void 0;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @since 2.11.0\n */\nvar reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\nexports.reverse = reverse;\n/**\n * @since 2.11.0\n */\nvar filterFirst = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n    }); };\n};\nexports.filterFirst = filterFirst;\n/**\n * @since 2.11.0\n */\nvar filterSecond = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n    }); };\n};\nexports.filterSecond = filterSecond;\n/**\n * @since 2.11.0\n */\nvar endo = function (f) {\n    return function (M) { return ({\n        concat: function (first, second) { return M.concat(f(first), f(second)); }\n    }); };\n};\nexports.endo = endo;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nvar concatAll = function (M) {\n    return function (startWith) {\n        return function (as) {\n            return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n        };\n    };\n};\nexports.concatAll = concatAll;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\nexports.fromEquals = fromEquals;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar struct = function (eqs) {\n    return (0, exports.fromEquals)(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return (0, exports.fromEquals)(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\nexports.tuple = tuple;\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.contramap)(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Eq<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for equality (meaning we have an `Eq<X>`)\n *\n * For example, given the following `User` type, we want to construct an `Eq<User>` that just looks at the `key` field\n * for each user (since it's known to be unique).\n *\n * If we have a way of comparing `UUID`s for equality (`eqUUID: Eq<UUID>`) and we know how to go from `User -> UUID`,\n * using `contramap` we can do this\n *\n * @example\n * import { contramap, Eq } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/string'\n *\n * type UUID = string\n *\n * interface User {\n *   readonly key: UUID\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const eqUUID: Eq<UUID> = S.Eq\n *\n * const eqUserByKey: Eq<User> = pipe(\n *   eqUUID,\n *   contramap((user) => user.key)\n * )\n *\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k2', firstName: 'a1', lastName: 'b1' }\n *   ),\n *   false\n * )\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k1', firstName: 'a2', lastName: 'b1' }\n *   ),\n *   true\n * )\n *\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return (0, exports.fromEquals)(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (x, y) { return (0, exports.fromEquals)(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Contravariant` instance, pass `E.Contravariant` instead of `E.eq`\n * (where `E` is from `import E from 'fp-ts/Eq'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.equals = exports.trivial = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nvar equalsDefault = function (compare) {\n    return function (first, second) {\n        return first === second || compare(first, second) === 0;\n    };\n};\nexports.equalsDefault = equalsDefault;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromCompare = function (compare) { return ({\n    equals: (0, exports.equalsDefault)(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\nexports.fromCompare = fromCompare;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return (0, exports.fromCompare)(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\nexports.tuple = tuple;\n/**\n * @since 2.10.0\n */\nvar reverse = function (O) { return (0, exports.fromCompare)(function (first, second) { return O.compare(second, first); }); };\nexports.reverse = reverse;\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.contramap)(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Ord<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for ordering (meaning we have an `Ord<X>`)\n *\n * For example, given the following `User` type, there are lots of possible choices for `X`,\n * but let's say we want to sort a list of users by `lastName`.\n *\n * If we have a way of comparing `lastName`s for ordering (`ordLastName: Ord<string>`) and we know how to go from `User -> string`,\n * using `contramap` we can do this\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import { contramap, Ord } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const ordLastName: Ord<string> = S.Ord\n *\n * const ordByLastName: Ord<User> = pipe(\n *   ordLastName,\n *   contramap((user) => user.lastName)\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordByLastName)([\n *     { firstName: 'a', lastName: 'd' },\n *     { firstName: 'c', lastName: 'b' }\n *   ]),\n *   [\n *     { firstName: 'c', lastName: 'b' },\n *     { firstName: 'a', lastName: 'd' }\n *   ]\n * )\n *\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return (0, exports.fromCompare)(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\nexports.contramap = contramap;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * A typical use case for the `Semigroup` instance of `Ord` is merging two or more orderings.\n *\n * For example the following snippet builds an `Ord` for a type `User` which\n * sorts by `created` date descending, and **then** `lastName`\n *\n * @example\n * import * as D from 'fp-ts/Date'\n * import { pipe } from 'fp-ts/function'\n * import { contramap, getSemigroup, Ord, reverse } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly id: string\n *   readonly lastName: string\n *   readonly created: Date\n * }\n *\n * const ordByLastName: Ord<User> = pipe(\n *   S.Ord,\n *   contramap((user) => user.lastName)\n * )\n *\n * const ordByCreated: Ord<User> = pipe(\n *   D.Ord,\n *   contramap((user) => user.created)\n * )\n *\n * const ordUserByCreatedDescThenLastName = getSemigroup<User>().concat(\n *   reverse(ordByCreated),\n *   ordByLastName\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordUserByCreatedDescThenLastName)([\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) }\n *   ]),\n *   [\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) }\n *   ]\n * )\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return (0, exports.fromCompare)(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: (0, exports.fromCompare)(function () { return 0; })\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.trivial = {\n    equals: function_1.constTrue,\n    compare: /*#__PURE__*/ (0, function_1.constant)(0)\n};\n/**\n * @since 2.11.0\n */\nvar equals = function (O) {\n    return function (second) {\n        return function (first) {\n            return first === second || O.compare(first, second) === 0;\n        };\n    };\n};\nexports.equals = equals;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nvar lt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === -1;\n    };\n};\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar gt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === 1;\n    };\n};\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nvar leq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== 1;\n    };\n};\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar geq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== -1;\n    };\n};\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar min = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) < 1 ? first : second;\n    };\n};\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar max = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) > -1 ? first : second;\n    };\n};\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nvar clamp = function (O) {\n    var minO = (0, exports.min)(O);\n    var maxO = (0, exports.max)(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nvar between = function (O) {\n    var ltO = (0, exports.lt)(O);\n    var gtO = (0, exports.gt)(O);\n    return function (low, hi) { return function (a) { return ltO(a, low) || gtO(a, hi) ? false : true; }; };\n};\nexports.between = between;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ord = exports.Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: Eq_1.eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordDate = (0, function_1.pipe)(exports.ordNumber, \n/*#__PURE__*/\n(0, exports.contramap)(function (date) { return date.valueOf(); }));\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.semigroupVoid = exports.concatAll = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar M = __importStar(require(\"./Magma\"));\nvar Or = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (O) { return ({\n    concat: Or.min(O)\n}); };\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (O) { return ({\n    concat: Or.max(O)\n}); };\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\nexports.constant = constant;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @since 2.10.0\n */\nexports.reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @since 2.10.0\n */\nvar struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @since 2.10.0\n */\nvar intercalate = function (middle) {\n    return function (S) { return ({\n        concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n    }); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nvar first = function () { return ({ concat: function_1.identity }); };\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nvar last = function () { return ({ concat: function (_, y) { return y; } }); };\nexports.last = last;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexports.concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupVoid = (0, exports.constant)(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.getIntercalateSemigroup = exports.intercalate;\nfunction fold(S) {\n    var concatAllS = (0, exports.concatAll)(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\nexports.fold = fold;\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n", "\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\nvar _bimap = function (fa, g, f) { return (0, function_1.pipe)(fa, (0, exports.bimap)(g, f)); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar map = function (f) {\n    return function (fa) {\n        return (0, exports.separated)((0, exports.left)(fa), f((0, exports.right)(fa)));\n    };\n};\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar mapLeft = function (f) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), (0, exports.right)(fa));\n    };\n};\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar bimap = function (f, g) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), g((0, exports.right)(fa)));\n    };\n};\nexports.bimap = bimap;\n/**\n * @category type lambdas\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexports.wiltDefault = wiltDefault;\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexports.witherDefault = witherDefault;\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\nexports.filterE = filterE;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.guard = void 0;\nfunction guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\nexports.guard = guard;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Witherable = exports.wilt = exports.wither = exports.Traversable = exports.sequence = exports.traverse = exports.Filterable = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.Compactable = exports.separate = exports.compact = exports.Extend = exports.extend = exports.Alternative = exports.guard = exports.Zero = exports.zero = exports.Alt = exports.alt = exports.altW = exports.orElse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.flatMap = exports.Applicative = exports.Apply = exports.ap = exports.Pointed = exports.of = exports.asUnit = exports.as = exports.Functor = exports.map = exports.getMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.getRight = exports.getLeft = exports.fromPredicate = exports.some = exports.none = void 0;\nexports.getFirstMonoid = exports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.getRefinement = exports.chainFirst = exports.chain = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.duplicate = exports.tapEither = exports.tap = exports.flatten = exports.apSecond = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.isNone = exports.isSome = exports.FromEither = exports.fromEither = exports.MonadThrow = exports.throwError = void 0;\nexports.getLastMonoid = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar chainable = __importStar(require(\"./Chain\"));\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Predicate_1 = require(\"./Predicate\");\nvar Semigroup_1 = require(\"./Semigroup\");\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.some = _.some;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? (0, exports.some)(a) : exports.none); };\n}\nexports.fromPredicate = fromPredicate;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nvar getLeft = function (ma) { return (ma._tag === 'Right' ? exports.none : (0, exports.some)(ma.left)); };\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nvar getRight = function (ma) { return (ma._tag === 'Left' ? exports.none : (0, exports.some)(ma.right)); };\nexports.getRight = getRight;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\nvar _filter = function (fa, predicate) { return (0, function_1.pipe)(fa, (0, exports.filter)(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMap)(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.partition)(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMap)(f)); };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (S) { return ({\n    show: function (ma) { return ((0, exports.isNone)(ma) ? 'none' : \"some(\".concat(S.show(ma.value), \")\")); }\n}); };\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || ((0, exports.isNone)(x) ? (0, exports.isNone)(y) : (0, exports.isNone)(y) ? false : E.equals(x.value, y.value)); }\n}); };\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nvar getOrd = function (O) { return ({\n    equals: (0, exports.getEq)(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : (0, exports.isSome)(x) ? ((0, exports.isSome)(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\nexports.getOrd = getOrd;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function (S) { return ({\n    concat: function (x, y) { return ((0, exports.isNone)(x) ? y : (0, exports.isNone)(y) ? x : (0, exports.some)(S.concat(x.value, y.value))); },\n    empty: exports.none\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? exports.none : (0, exports.some)(f(fa.value));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Maps the `Some` value of this `Option` to the specified constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.as = (0, function_1.dual)(2, (0, Functor_1.as)(exports.Functor));\n/**\n * Maps the `Some` value of this `Option` to the void constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.asUnit = (0, Functor_1.asUnit)(exports.Functor);\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.of = exports.some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) {\n    return (0, exports.isNone)(fab) ? exports.none : (0, exports.isNone)(fa) ? exports.none : (0, exports.some)(fab.value(fa.value));\n}; };\nexports.ap = ap;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) { return ((0, exports.isNone)(ma) ? exports.none : f(ma.value)); });\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? b : f(b, fa.value);\n}; };\nexports.reduce = reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? M.empty : f(fa.value);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category folding\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? b : f(fa.value, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Returns the provided `Option` `that` if `self` is `None`, otherwise returns `self`.\n *\n * @param self - The first `Option` to be checked.\n * @param that - The `Option` to return if `self` is `None`.\n *\n * @example\n * import * as O from \"fp-ts/Option\"\n *\n * assert.deepStrictEqual(O.orElse(O.none, () => O.none), O.none)\n * assert.deepStrictEqual(O.orElse(O.some(1), () => O.none), O.some(1))\n * assert.deepStrictEqual(O.orElse(O.none, () => O.some('b')), O.some('b'))\n * assert.deepStrictEqual(O.orElse(O.some(1), () => O.some('b')), O.some(1))\n *\n * @category error handling\n * @since 2.16.0\n */\nexports.orElse = (0, function_1.dual)(2, function (self, that) { return ((0, exports.isNone)(self) ? that() : self); });\n/**\n * Alias of `orElse`.\n *\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category legacy\n * @since 2.9.0\n */\nexports.altW = exports.orElse;\n/**\n * Alias of `orElse`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.alt = exports.orElse;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.7.0\n */\nvar zero = function () { return exports.none; };\nexports.zero = zero;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexports.guard = (0, Zero_1.guard)(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return (0, exports.isNone)(wa) ? exports.none : (0, exports.some)(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexports.compact = (0, exports.flatMap)(function_1.identity);\nvar defaultSeparated = /*#__PURE__*/ (0, Separated_1.separated)(exports.none, exports.none);\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar separate = function (ma) {\n    return (0, exports.isNone)(ma) ? defaultSeparated : (0, Separated_1.separated)((0, exports.getLeft)(ma.value), (0, exports.getRight)(ma.value));\n};\nexports.separate = separate;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar filter = function (predicate) {\n    return function (fa) {\n        return (0, exports.isNone)(fa) ? exports.none : predicate(fa.value) ? fa : exports.none;\n    };\n};\nexports.filter = filter;\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar filterMap = function (f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? exports.none : f(fa.value);\n}; };\nexports.filterMap = filterMap;\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return function (fa) {\n        return (0, Separated_1.separated)(_filter(fa, (0, Predicate_1.not)(predicate)), _filter(fa, predicate));\n    };\n};\nexports.partition = partition;\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return (0, function_1.flow)((0, exports.map)(f), exports.separate); };\nexports.partitionMap = partitionMap;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return (0, exports.isNone)(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some);\n        };\n    };\n};\nexports.traverse = traverse;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ta) {\n        return (0, exports.isNone)(ta) ? F.of(exports.none) : F.map(ta.value, exports.some);\n    };\n};\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\nvar _wither = /*#__PURE__*/ (0, Witherable_1.witherDefault)(exports.Traversable, exports.Compactable);\nvar _wilt = /*#__PURE__*/ (0, Witherable_1.wiltDefault)(exports.Traversable, exports.Compactable);\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @since 2.7.0\n */\nvar throwError = function () { return exports.none; };\nexports.throwError = throwError;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap,\n    throwError: exports.throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.fromEither = exports.getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nvar matchW = function (onNone, onSome) {\n    return function (ma) {\n        return (0, exports.isNone)(ma) ? onNone() : onSome(ma.value);\n    };\n};\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nvar getOrElseW = function (onNone) {\n    return function (ma) {\n        return (0, exports.isNone)(ma) ? onNone() : ma.value;\n    };\n};\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category combinators\n * @since 2.15.0\n */\nexports.tap = (0, function_1.dual)(2, chainable.tap(exports.Chain));\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n * import * as E from 'fp-ts/Either'\n *\n * const compute = (value: number) => pipe(\n *   O.of(value),\n *   O.tapEither((value) => value > 0 ? E.right('ok') : E.left('error')),\n * )\n *\n * assert.deepStrictEqual(compute(1), O.of(1))\n * assert.deepStrictEqual(compute(-42), O.none)\n *\n * @category combinators\n * @since 2.16.0\n */\nexports.tapEither = (0, function_1.dual)(2, (0, FromEither_1.tapEither)(exports.FromEither, exports.Chain));\n/**\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category lifting\n * @since 2.11.0\n */\nexports.fromEitherK = (0, FromEither_1.fromEitherK)(exports.FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainEitherK = \n/*#__PURE__*/ (0, FromEither_1.chainEitherK)(exports.FromEither, exports.Chain);\n/**\n * Alias of `tapEither`.\n *\n * @category legacy\n * @since 2.12.0\n */\nexports.chainFirstEitherK = exports.tapEither;\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromNullable = function (a) { return (a == null ? exports.none : (0, exports.some)(a)); };\nexports.fromNullable = fromNullable;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f) {\n    try {\n        return (0, exports.some)(f());\n    }\n    catch (e) {\n        return exports.none;\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.tryCatch)(function () { return f.apply(void 0, a); });\n    };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category lifting\n * @since 2.9.0\n */\nvar fromNullableK = function (f) { return (0, function_1.flow)(f, exports.fromNullable); };\nexports.fromNullableK = fromNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category sequencing\n * @since 2.9.0\n */\nvar chainNullableK = function (f) {\n    return function (ma) {\n        return (0, exports.isNone)(ma) ? exports.none : (0, exports.fromNullable)(f(ma.value));\n    };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.toNullable = (0, exports.match)(function_1.constNull, function_1.identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.toUndefined = (0, exports.match)(function_1.constUndefined, function_1.identity);\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return (0, exports.isNone)(ma) ? false : E.equals(a, ma.value);\n    };\n}\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) {\n    return function (ma) {\n        return (0, exports.isNone)(ma) ? false : predicate(ma.value);\n    };\n};\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = chainable.bind(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var o = f(0, _.head(as));\n        if ((0, exports.isNone)(o)) {\n            return exports.none;\n        }\n        var out = [o.value];\n        for (var i = 1; i < as.length; i++) {\n            var o_1 = f(i, as[i]);\n            if ((0, exports.isNone)(o_1)) {\n                return exports.none;\n            }\n            out.push(o_1.value);\n        }\n        return (0, exports.some)(out);\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chainFirst = exports.tap;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `Refinement` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getRefinement(getOption) {\n    return function (a) { return (0, exports.isSome)(getOption(a)); };\n}\nexports.getRefinement = getRefinement;\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.mapNullable = exports.chainNullableK;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `O.Functor` instead of `O.option`\n * (where `O` is from `import O from 'fp-ts/Option'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.option = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: exports.flatMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    zero: exports.zero,\n    alt: _alt,\n    extend: _extend,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = (0, Apply_1.getApplySemigroup)(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = (0, Applicative_1.getApplicativeMonoid)(exports.Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getFirstMonoid = function () { return (0, exports.getMonoid)((0, Semigroup_1.first)()); };\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getLastMonoid = function () { return (0, exports.getMonoid)((0, Semigroup_1.last)()); };\nexports.getLastMonoid = getLastMonoid;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCompactableComposition = exports.separate = exports.compact = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Option_1 = require(\"./Option\");\nvar S = __importStar(require(\"./Separated\"));\nfunction compact(F, G) {\n    return function (fga) { return F.map(fga, G.compact); };\n}\nexports.compact = compact;\nfunction separate(F, C, G) {\n    var _compact = compact(F, C);\n    var _map = (0, Functor_1.map)(F, G);\n    return function (fge) { return S.separated(_compact((0, function_1.pipe)(fge, _map(Option_1.getLeft))), _compact((0, function_1.pipe)(fge, _map(Option_1.getRight)))); };\n}\nexports.separate = separate;\n/** @deprecated */\nfunction getCompactableComposition(F, G) {\n    var map = (0, Functor_1.getFunctorComposition)(F, G).map;\n    return {\n        map: map,\n        compact: compact(F, G),\n        separate: separate(F, G, G)\n    };\n}\nexports.getCompactableComposition = getCompactableComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tailRec = void 0;\n/**\n * @since 2.0.0\n */\nvar tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\nexports.tailRec = tailRec;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.match = exports.foldW = exports.matchW = exports.isRight = exports.isLeft = exports.fromOption = exports.fromPredicate = exports.FromEither = exports.MonadThrow = exports.throwError = exports.ChainRec = exports.Extend = exports.extend = exports.Alt = exports.alt = exports.altW = exports.Bifunctor = exports.mapLeft = exports.bimap = exports.Traversable = exports.sequence = exports.traverse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.Applicative = exports.Apply = exports.ap = exports.apW = exports.Pointed = exports.of = exports.asUnit = exports.as = exports.Functor = exports.map = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = exports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.flatMap = exports.right = exports.left = void 0;\nexports.chainFirstW = exports.chainFirst = exports.chain = exports.chainW = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.let = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.orElse = exports.orElseW = exports.swap = exports.filterOrElseW = exports.filterOrElse = exports.flatMapOption = exports.flatMapNullable = exports.liftOption = exports.liftNullable = exports.chainOptionKW = exports.chainOptionK = exports.fromOptionK = exports.duplicate = exports.flatten = exports.flattenW = exports.tap = exports.apSecondW = exports.apSecond = exports.apFirstW = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = exports.fold = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar chainable = __importStar(require(\"./Chain\"));\nvar ChainRec_1 = require(\"./ChainRec\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.right = _.right;\n/**\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) { return ((0, exports.isLeft)(ma) ? ma : f(ma.right)); });\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return (0, function_1.pipe)(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return (0, function_1.pipe)(fa, (0, exports.bimap)(f, g)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\nvar _chainRec = function (a, f) {\n    return (0, ChainRec_1.tailRec)(f(a), function (e) {\n        return (0, exports.isLeft)(e) ? (0, exports.right)((0, exports.left)(e.left)) : (0, exports.isLeft)(e.right) ? (0, exports.left)(f(e.right.left)) : (0, exports.right)((0, exports.right)(e.right.right));\n    });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (SE, SA) { return ({\n    show: function (ma) { return ((0, exports.isLeft)(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\")); }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || ((0, exports.isLeft)(x) ? (0, exports.isLeft)(y) && EL.equals(x.left, y.left) : (0, exports.isRight)(y) && EA.equals(x.right, y.right));\n    }\n}); };\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function (S) { return ({\n    concat: function (x, y) { return ((0, exports.isLeft)(y) ? x : (0, exports.isLeft)(x) ? y : (0, exports.right)(S.concat(x.right, y.right))); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: function (ma) { return ((0, exports.isLeft)(ma) ? ma : ma.right._tag === 'None' ? empty : (0, exports.right)(ma.right.value)); },\n        separate: function (ma) {\n            return (0, exports.isLeft)(ma)\n                ? (0, Separated_1.separated)(ma, ma)\n                : (0, exports.isLeft)(ma.right)\n                    ? (0, Separated_1.separated)((0, exports.right)(ma.right.left), empty)\n                    : (0, Separated_1.separated)(empty, (0, exports.right)(ma.right.right));\n        }\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getFilterable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    var _a = (0, exports.getCompactable)(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return (0, exports.isLeft)(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return (0, exports.isLeft)(ma)\n            ? (0, Separated_1.separated)(ma, ma)\n            : p(ma.right)\n                ? (0, Separated_1.separated)(empty, (0, exports.right)(ma.right))\n                : (0, Separated_1.separated)((0, exports.right)(ma.right), empty);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : (0, exports.right)(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return (0, Separated_1.separated)(ma, ma);\n            }\n            var e = f(ma.right);\n            return (0, exports.isLeft)(e) ? (0, Separated_1.separated)((0, exports.right)(e.left), empty) : (0, Separated_1.separated)(empty, (0, exports.right)(e.right));\n        }\n    };\n};\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nvar getWitherable = function (M) {\n    var F_ = (0, exports.getFilterable)(M);\n    var C = (0, exports.getCompactable)(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: (0, Witherable_1.witherDefault)(exports.Traversable, C),\n        wilt: (0, Witherable_1.wiltDefault)(exports.Traversable, C)\n    };\n};\nexports.getWitherable = getWitherable;\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getApplicativeValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return (0, exports.isLeft)(fab)\n            ? (0, exports.isLeft)(fa)\n                ? (0, exports.left)(SE.concat(fab.left, fa.left))\n                : fab\n            : (0, exports.isLeft)(fa)\n                ? fa\n                : (0, exports.right)(fab.right(fa.right));\n    },\n    of: exports.of\n}); };\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getAltValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if ((0, exports.isRight)(me)) {\n            return me;\n        }\n        var ea = that();\n        return (0, exports.isLeft)(ea) ? (0, exports.left)(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\nexports.getAltValidation = getAltValidation;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? fa : (0, exports.right)(f(fa.right));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Maps the `Right` value of this `Either` to the specified constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.as = (0, function_1.dual)(2, (0, Functor_1.as)(exports.Functor));\n/**\n * Maps the `Right` value of this `Either` to the void constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.asUnit = (0, Functor_1.asUnit)(exports.Functor);\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) {\n    return (0, exports.isLeft)(fab) ? fab : (0, exports.isLeft)(fa) ? fa : (0, exports.right)(fab.right(fa.right));\n}; };\nexports.apW = apW;\n/**\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? M.empty : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return (0, exports.isLeft)(ta) ? F.of((0, exports.left)(ta.left)) : F.map(f(ta.right), exports.right);\n        };\n    };\n};\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? F.of((0, exports.left)(ma.left)) : F.map(ma.right, exports.right);\n    };\n};\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : (0, exports.right)(g(fa.right));\n}; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return (0, exports.isLeft)(wa) ? wa : (0, exports.right)(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexports.fromPredicate = (0, FromEither_1.fromPredicate)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/ (0, FromEither_1.fromOption)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : onRight(ma.right);\n    };\n};\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nvar getOrElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma.right;\n    };\n};\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apFirstW = exports.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apSecondW = exports.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category combinators\n * @since 2.15.0\n */\nexports.tap = (0, function_1.dual)(2, chainable.tap(exports.Chain));\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexports.flattenW = \n/*#__PURE__*/ (0, exports.flatMap)(function_1.identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.flattenW;\n/**\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * Use `liftOption`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/ (0, FromEither_1.fromOptionK)(exports.FromEither);\n/**\n * Use `flatMapOption`.\n *\n * @category legacy\n * @since 2.11.0\n */\nexports.chainOptionK = (0, FromEither_1.chainOptionK)(exports.FromEither, exports.Chain);\n/**\n * Use `flatMapOption`.\n *\n * @category legacy\n * @since 2.13.2\n */\nexports.chainOptionKW = exports.chainOptionK;\n/** @internal */\nvar _FromEither = {\n    fromEither: exports.FromEither.fromEither\n};\n/**\n * @category lifting\n * @since 2.15.0\n */\nexports.liftNullable = _.liftNullable(_FromEither);\n/**\n * @category lifting\n * @since 2.15.0\n */\nexports.liftOption = _.liftOption(_FromEither);\n/** @internal */\nvar _FlatMap = {\n    flatMap: exports.flatMap\n};\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexports.flatMapNullable = _.flatMapNullable(_FromEither, _FlatMap);\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexports.flatMapOption = _.flatMapOption(_FromEither, _FlatMap);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.filterOrElse = (0, FromEither_1.filterOrElse)(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nvar swap = function (ma) { return ((0, exports.isLeft)(ma) ? (0, exports.right)(ma.left) : (0, exports.left)(ma.right)); };\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar orElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma;\n    };\n};\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromNullable = function (e) {\n    return function (a) {\n        return a == null ? (0, exports.left)(e) : (0, exports.right)(a);\n    };\n};\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) {\n    try {\n        return (0, exports.right)(f());\n    }\n    catch (e) {\n        return (0, exports.left)(onThrow(e));\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.tryCatch)(function () { return f.apply(void 0, a); }, onThrow);\n    };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * Use `liftNullable`.\n *\n * @category legacy\n * @since 2.9.0\n */\nvar fromNullableK = function (e) {\n    var from = (0, exports.fromNullable)(e);\n    return function (f) { return (0, function_1.flow)(f, from); };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * Use `flatMapNullable`.\n *\n * @category legacy\n * @since 2.9.0\n */\nvar chainNullableK = function (e) {\n    var from = (0, exports.fromNullableK)(e);\n    return function (f) { return (0, exports.flatMap)(from(f)); };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.toUnion = (0, exports.foldW)(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return (0, exports.isLeft)(ma) ? false : E.equals(a, ma.right);\n    };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? false : predicate(ma.right);\n    };\n};\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = chainable.bind(exports.Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var e = f(0, _.head(as));\n        if ((0, exports.isLeft)(e)) {\n            return e;\n        }\n        var out = [e.right];\n        for (var i = 1; i < as.length; i++) {\n            var e_1 = f(i, as[i]);\n            if ((0, exports.isLeft)(e_1)) {\n                return e_1;\n            }\n            out.push(e_1.right);\n        }\n        return (0, exports.right)(out);\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.6.0\n */\nexports.chainW = exports.flatMap;\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chainFirst = exports.tap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.8.0\n */\nexports.chainFirstW = exports.tap;\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction parseJSON(s, onError) {\n    return (0, exports.tryCatch)(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function (u, onError) {\n    return (0, exports.tryCatch)(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: exports.flatMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/ (0, Apply_1.getApplySemigroup)(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/ (0, Applicative_1.getApplicativeMonoid)(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function (SE, SA) {\n    return (0, Apply_1.getApplySemigroup)((0, exports.getApplicativeValidation)(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function (SE, MA) {\n    return (0, Applicative_1.getApplicativeMonoid)((0, exports.getApplicativeValidation)(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n    var ap = (0, exports.getApplicativeValidation)(SE).ap;\n    var alt = (0, exports.getAltValidation)(SE).alt;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: exports.flatMap,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        chainRec: _chainRec,\n        throwError: exports.throwError,\n        ap: ap,\n        alt: alt\n    };\n}\nexports.getValidation = getValidation;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEitherM = exports.toUnion = exports.swap = exports.orLeft = exports.tapError = exports.orElseFirst = exports.orElse = exports.getOrElse = exports.matchE = exports.match = exports.altValidation = exports.mapError = exports.mapLeft = exports.mapBoth = exports.bimap = exports.alt = exports.flatMap = exports.chain = exports.ap = exports.map = exports.chainNullableK = exports.fromNullableK = exports.fromNullable = exports.leftF = exports.rightF = exports.left = exports.right = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar E = __importStar(require(\"./Either\"));\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction right(F) {\n    return (0, function_1.flow)(E.right, F.of);\n}\nexports.right = right;\nfunction left(F) {\n    return (0, function_1.flow)(E.left, F.of);\n}\nexports.left = left;\nfunction rightF(F) {\n    return function (fa) { return F.map(fa, E.right); };\n}\nexports.rightF = rightF;\nfunction leftF(F) {\n    return function (fe) { return F.map(fe, E.left); };\n}\nexports.leftF = leftF;\nfunction fromNullable(F) {\n    return function (e) { return (0, function_1.flow)(E.fromNullable(e), F.of); };\n}\nexports.fromNullable = fromNullable;\nfunction fromNullableK(F) {\n    var fromNullableF = fromNullable(F);\n    return function (e) {\n        var fromNullableFE = fromNullableF(e);\n        return function (f) { return (0, function_1.flow)(f, fromNullableFE); };\n    };\n}\nexports.fromNullableK = fromNullableK;\nfunction chainNullableK(M) {\n    var chainM = chain(M);\n    var fromNullableKM = fromNullableK(M);\n    return function (e) {\n        var fromNullableKMe = fromNullableKM(e);\n        return function (f) { return chainM(fromNullableKMe(f)); };\n    };\n}\nexports.chainNullableK = chainNullableK;\nfunction map(F) {\n    return (0, Functor_1.map)(F, E.Functor);\n}\nexports.map = map;\nfunction ap(F) {\n    return (0, Apply_1.ap)(F, E.Apply);\n}\nexports.ap = ap;\nfunction chain(M) {\n    var flatMapM = flatMap(M);\n    return function (f) { return function (ma) { return flatMapM(ma, f); }; };\n}\nexports.chain = chain;\n/** @internal */\nfunction flatMap(M) {\n    return function (ma, f) { return M.chain(ma, function (e) { return (E.isLeft(e) ? M.of(e) : f(e.right)); }); };\n}\nexports.flatMap = flatMap;\nfunction alt(M) {\n    return function (second) { return function (first) { return M.chain(first, function (e) { return (E.isLeft(e) ? second() : M.of(e)); }); }; };\n}\nexports.alt = alt;\nfunction bimap(F) {\n    var mapBothF = mapBoth(F);\n    return function (f, g) { return function (self) { return mapBothF(self, f, g); }; };\n}\nexports.bimap = bimap;\n/** @internal */\nfunction mapBoth(F) {\n    return function (self, f, g) { return F.map(self, E.bimap(f, g)); };\n}\nexports.mapBoth = mapBoth;\nfunction mapLeft(F) {\n    var mapErrorF = mapError(F);\n    return function (f) { return function (self) { return mapErrorF(self, f); }; };\n}\nexports.mapLeft = mapLeft;\n/** @internal */\nfunction mapError(F) {\n    return function (self, f) { return F.map(self, E.mapLeft(f)); };\n}\nexports.mapError = mapError;\nfunction altValidation(M, S) {\n    return function (second) { return function (first) {\n        return M.chain(first, E.match(function (e1) {\n            return M.map(second(), E.mapLeft(function (e2) { return S.concat(e1, e2); }));\n        }, right(M)));\n    }; };\n}\nexports.altValidation = altValidation;\nfunction match(F) {\n    return function (onLeft, onRight) { return function (ma) { return F.map(ma, E.match(onLeft, onRight)); }; };\n}\nexports.match = match;\nfunction matchE(M) {\n    return function (onLeft, onRight) { return function (ma) { return M.chain(ma, E.match(onLeft, onRight)); }; };\n}\nexports.matchE = matchE;\nfunction getOrElse(M) {\n    return function (onLeft) { return function (ma) { return M.chain(ma, E.match(onLeft, M.of)); }; };\n}\nexports.getOrElse = getOrElse;\nfunction orElse(M) {\n    return function (onLeft) { return function (ma) { return M.chain(ma, function (e) { return (E.isLeft(e) ? onLeft(e.left) : M.of(e)); }); }; };\n}\nexports.orElse = orElse;\nfunction orElseFirst(M) {\n    var tapErrorM = tapError(M);\n    return function (onLeft) { return function (ma) { return tapErrorM(ma, onLeft); }; };\n}\nexports.orElseFirst = orElseFirst;\n/** @internal */\nfunction tapError(M) {\n    var orElseM = orElse(M);\n    return function (ma, onLeft) {\n        return (0, function_1.pipe)(ma, orElseM(function (e) { return M.map(onLeft(e), function (eb) { return (E.isLeft(eb) ? eb : E.left(e)); }); }));\n    };\n}\nexports.tapError = tapError;\nfunction orLeft(M) {\n    return function (onLeft) { return function (ma) {\n        return M.chain(ma, E.match(function (e) { return M.map(onLeft(e), E.left); }, function (a) { return M.of(E.right(a)); }));\n    }; };\n}\nexports.orLeft = orLeft;\nfunction swap(F) {\n    return function (ma) { return F.map(ma, E.swap); };\n}\nexports.swap = swap;\nfunction toUnion(F) {\n    return function (fa) { return F.map(fa, E.toUnion); };\n}\nexports.toUnion = toUnion;\n/** @deprecated  */\n/* istanbul ignore next */\nfunction getEitherM(M) {\n    var _ap = ap(M);\n    var _map = map(M);\n    var _chain = chain(M);\n    var _alt = alt(M);\n    var _bimap = bimap(M);\n    var _mapLeft = mapLeft(M);\n    var _fold = matchE(M);\n    var _getOrElse = getOrElse(M);\n    var _orElse = orElse(M);\n    return {\n        map: function (fa, f) { return (0, function_1.pipe)(fa, _map(f)); },\n        ap: function (fab, fa) { return (0, function_1.pipe)(fab, _ap(fa)); },\n        of: right(M),\n        chain: function (ma, f) { return (0, function_1.pipe)(ma, _chain(f)); },\n        alt: function (fa, that) { return (0, function_1.pipe)(fa, _alt(that)); },\n        bimap: function (fea, f, g) { return (0, function_1.pipe)(fea, _bimap(f, g)); },\n        mapLeft: function (fea, f) { return (0, function_1.pipe)(fea, _mapLeft(f)); },\n        fold: function (fa, onLeft, onRight) { return (0, function_1.pipe)(fa, _fold(onLeft, onRight)); },\n        getOrElse: function (fa, onLeft) { return (0, function_1.pipe)(fa, _getOrElse(onLeft)); },\n        orElse: function (fa, f) { return (0, function_1.pipe)(fa, _orElse(f)); },\n        swap: swap(M),\n        rightM: rightF(M),\n        leftM: leftF(M),\n        left: left(M)\n    };\n}\nexports.getEitherM = getEitherM;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFilterableComposition = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = void 0;\n/**\n * `Filterable` represents data structures which can be _partitioned_/_filtered_.\n *\n * Adapted from https://github.com/LiamGoodacre/purescript-filterable/blob/master/src/Data/Filterable.purs\n *\n * @since 2.0.0\n */\nvar Compactable_1 = require(\"./Compactable\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Option_1 = require(\"./Option\");\nvar Predicate_1 = require(\"./Predicate\");\nvar Separated_1 = require(\"./Separated\");\nfunction filter(F, G) {\n    return function (predicate) { return function (fga) { return F.map(fga, function (ga) { return G.filter(ga, predicate); }); }; };\n}\nexports.filter = filter;\nfunction filterMap(F, G) {\n    return function (f) { return function (fga) { return F.map(fga, function (ga) { return G.filterMap(ga, f); }); }; };\n}\nexports.filterMap = filterMap;\nfunction partition(F, G) {\n    var _filter = filter(F, G);\n    return function (predicate) {\n        var left = _filter((0, Predicate_1.not)(predicate));\n        var right = _filter(predicate);\n        return function (fgb) { return (0, Separated_1.separated)(left(fgb), right(fgb)); };\n    };\n}\nexports.partition = partition;\nfunction partitionMap(F, G) {\n    var _filterMap = filterMap(F, G);\n    return function (f) { return function (fga) {\n        return (0, Separated_1.separated)((0, function_1.pipe)(fga, _filterMap(function (a) { return (0, Option_1.getLeft)(f(a)); })), (0, function_1.pipe)(fga, _filterMap(function (a) { return (0, Option_1.getRight)(f(a)); })));\n    }; };\n}\nexports.partitionMap = partitionMap;\n/** @deprecated */\nfunction getFilterableComposition(F, G) {\n    var map = (0, Functor_1.getFunctorComposition)(F, G).map;\n    var _compact = (0, Compactable_1.compact)(F, G);\n    var _separate = (0, Compactable_1.separate)(F, G, G);\n    var _filter = filter(F, G);\n    var _filterMap = filterMap(F, G);\n    var _partition = partition(F, G);\n    var _partitionMap = partitionMap(F, G);\n    return {\n        map: map,\n        compact: _compact,\n        separate: _separate,\n        filter: function (fga, f) { return (0, function_1.pipe)(fga, _filter(f)); },\n        filterMap: function (fga, f) { return (0, function_1.pipe)(fga, _filterMap(f)); },\n        partition: function (fga, p) { return (0, function_1.pipe)(fga, _partition(p)); },\n        partitionMap: function (fga, f) { return (0, function_1.pipe)(fga, _partitionMap(f)); }\n    };\n}\nexports.getFilterableComposition = getFilterableComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tapIO = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = void 0;\n/**\n * Lift a computation from the `IO` monad\n *\n * @since 2.10.0\n */\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nfunction fromIOK(F) {\n    return function (f) { return (0, function_1.flow)(f, F.fromIO); };\n}\nexports.fromIOK = fromIOK;\nfunction chainIOK(F, M) {\n    return function (f) {\n        var g = (0, function_1.flow)(f, F.fromIO);\n        return function (first) { return M.chain(first, g); };\n    };\n}\nexports.chainIOK = chainIOK;\nfunction chainFirstIOK(F, M) {\n    var tapIOM = tapIO(F, M);\n    return function (f) { return function (first) { return tapIOM(first, f); }; };\n}\nexports.chainFirstIOK = chainFirstIOK;\n/** @internal */\nfunction tapIO(F, M) {\n    var chainFirstM = (0, Chain_1.tap)(M);\n    return function (self, f) { return chainFirstM(self, (0, function_1.flow)(f, F.fromIO)); };\n}\nexports.tapIO = tapIO;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tapTask = exports.chainFirstTaskK = exports.chainTaskK = exports.fromTaskK = void 0;\n/**\n * Lift a computation from the `Task` monad\n *\n * @since 2.10.0\n */\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nfunction fromTaskK(F) {\n    return function (f) { return (0, function_1.flow)(f, F.fromTask); };\n}\nexports.fromTaskK = fromTaskK;\nfunction chainTaskK(F, M) {\n    return function (f) {\n        var g = (0, function_1.flow)(f, F.fromTask);\n        return function (first) { return M.chain(first, g); };\n    };\n}\nexports.chainTaskK = chainTaskK;\nfunction chainFirstTaskK(F, M) {\n    var tapTaskM = tapTask(F, M);\n    return function (f) { return function (first) { return tapTaskM(first, f); }; };\n}\nexports.chainFirstTaskK = chainFirstTaskK;\n/** @internal */\nfunction tapTask(F, M) {\n    var tapM = (0, Chain_1.tap)(M);\n    return function (self, f) { return tapM(self, (0, function_1.flow)(f, F.fromTask)); };\n}\nexports.tapTask = tapTask;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceSeqArray = exports.traverseSeqArray = exports.traverseSeqArrayWithIndex = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndexSeq = exports.traverseReadonlyNonEmptyArrayWithIndexSeq = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.never = exports.FromTask = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.tapIO = exports.tap = exports.flatMapIO = exports.FromIO = exports.MonadTask = exports.fromTask = exports.MonadIO = exports.Monad = exports.Chain = exports.ApplicativeSeq = exports.ApplySeq = exports.ApplicativePar = exports.apSecond = exports.apFirst = exports.ApplyPar = exports.Pointed = exports.flap = exports.asUnit = exports.as = exports.Functor = exports.getRaceMonoid = exports.URI = exports.flatten = exports.flatMap = exports.of = exports.ap = exports.map = exports.delay = exports.fromIO = void 0;\nexports.getMonoid = exports.getSemigroup = exports.taskSeq = exports.task = exports.chainFirst = exports.chain = void 0;\n/**\n * ```ts\n * interface Task<A> {\n *   (): Promise<A>\n * }\n * ```\n *\n * `Task<A>` represents an asynchronous computation that yields a value of type `A` and **never fails**.\n * If you want to represent an asynchronous computation that may fail, please see `TaskEither`.\n *\n * @since 2.0.0\n */\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar chainable = __importStar(require(\"./Chain\"));\nvar FromIO_1 = require(\"./FromIO\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.0.0\n */\nvar fromIO = function (ma) { return function () { return Promise.resolve().then(ma); }; };\nexports.fromIO = fromIO;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Creates a task that will complete after a time delay\n *\n * @example\n * import { sequenceT } from 'fp-ts/Apply'\n * import * as T from 'fp-ts/Task'\n * import { takeRight } from 'fp-ts/Array'\n *\n * async function test() {\n *   const log: Array<string> = []\n *   const append = (message: string): T.Task<void> =>\n *     T.fromIO(() => {\n *       log.push(message)\n *     })\n *   const fa = append('a')\n *   const fb = T.delay(20)(append('b'))\n *   const fc = T.delay(10)(append('c'))\n *   const fd = append('d')\n *   await sequenceT(T.ApplyPar)(fa, fb, fc, fd)()\n *   assert.deepStrictEqual(takeRight(2)(log), ['c', 'b'])\n * }\n *\n * test()\n *\n * @since 2.0.0\n */\nfunction delay(millis) {\n    return function (ma) { return function () {\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                Promise.resolve().then(ma).then(resolve);\n            }, millis);\n        });\n    }; };\n}\nexports.delay = delay;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _apPar = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\nvar _apSeq = function (fab, fa) { return (0, exports.flatMap)(fab, function (f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); }); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return function () {\n    return Promise.resolve().then(fa).then(f);\n}; }; };\nexports.map = map;\n/**\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) { return function () {\n    return Promise.all([Promise.resolve().then(fab), Promise.resolve().then(fa)]).then(function (_a) {\n        var f = _a[0], a = _a[1];\n        return f(a);\n    });\n}; }; };\nexports.ap = ap;\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar of = function (a) { return function () { return Promise.resolve(a); }; };\nexports.of = of;\n/**\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return function () {\n        return Promise.resolve()\n            .then(ma)\n            .then(function (a) { return f(a)(); });\n    };\n});\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = (0, exports.flatMap)(function_1.identity);\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Task';\n/**\n * Monoid returning the first completed task.\n *\n * Note: uses `Promise.race` internally.\n *\n * @example\n * import * as T from 'fp-ts/Task'\n *\n * async function test() {\n *   const S = T.getRaceMonoid<string>()\n *   const fa = T.delay(20)(T.of('a'))\n *   const fb = T.delay(10)(T.of('b'))\n *   assert.deepStrictEqual(await S.concat(fa, fb)(), 'b')\n * }\n *\n * test()\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getRaceMonoid() {\n    return {\n        concat: function (x, y) { return function () { return Promise.race([Promise.resolve().then(x), Promise.resolve().then(y)]); }; },\n        empty: exports.never\n    };\n}\nexports.getRaceMonoid = getRaceMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Maps the value to the specified constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.as = (0, function_1.dual)(2, (0, Functor_1.as)(exports.Functor));\n/**\n * Maps the value to the void constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.asUnit = (0, Functor_1.asUnit)(exports.Functor);\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * Runs computations in parallel.\n *\n * @category instances\n * @since 2.10.0\n */\nexports.ApplyPar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.ApplyPar);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.ApplyPar);\n/**\n * Runs computations in parallel.\n *\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativePar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    of: exports.of\n};\n/**\n * Runs computations sequentially.\n *\n * @category instances\n * @since 2.10.0\n */\nexports.ApplySeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq\n};\n/**\n * Runs computations sequentially.\n *\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativeSeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: exports.flatMap,\n    fromIO: exports.fromIO\n};\n/**\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.fromTask = function_1.identity;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadTask = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: exports.flatMap,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/** @internal */\nvar _FlatMap = {\n    flatMap: exports.flatMap\n};\n/** @internal */\nvar _FromIO = {\n    fromIO: exports.FromIO.fromIO\n};\n/**\n * @category sequencing\n * @since 2.16.0\n */\nexports.flatMapIO = _.flatMapIO(_FromIO, _FlatMap);\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category combinators\n * @since 2.15.0\n */\nexports.tap = (0, function_1.dual)(2, chainable.tap(exports.Chain));\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as T from 'fp-ts/Task'\n * import * as Console from 'fp-ts/Console'\n *\n * // Will produce `Hello, fp-ts` to the stdout\n * const effect = pipe(\n *   T.of('fp-ts'),\n *   T.tapIO((value) => Console.log(`Hello, ${value}`)),\n * )\n *\n * async function test() {\n *   assert.deepStrictEqual(await effect(), 'fp-ts')\n * }\n *\n * test()\n *\n * @category combinators\n * @since 2.16.0\n */\nexports.tapIO = (0, function_1.dual)(2, (0, FromIO_1.tapIO)(exports.FromIO, exports.Chain));\n/**\n * @category lifting\n * @since 2.4.0\n */\nexports.fromIOK = \n/*#__PURE__*/ (0, FromIO_1.fromIOK)(exports.FromIO);\n/**\n * Alias of `flatMapIO`.\n *\n * @category legacy\n * @since 2.4.0\n */\nexports.chainIOK = exports.flatMapIO;\n/**\n * Alias of `tapIO`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.chainFirstIOK = exports.tapIO;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: exports.URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * A `Task` that never completes.\n *\n * @since 2.0.0\n */\nvar never = function () { return new Promise(function (_) { return undefined; }); };\nexports.never = never;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = chainable.bind(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.ApplyPar);\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        return function () {\n            return Promise.all(as.map(function (a, i) { return Promise.resolve().then(function () { return f(i, a)(); }); }));\n        };\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndexSeq = function (f) {\n    return function (as) {\n        return function () {\n            return _.tail(as).reduce(function (acc, a, i) {\n                return acc.then(function (bs) {\n                    return Promise.resolve()\n                        .then(f(i + 1, a))\n                        .then(function (b) {\n                        bs.push(b);\n                        return bs;\n                    });\n                });\n            }, Promise.resolve()\n                .then(f(0, _.head(as)))\n                .then(_.singleton));\n        };\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndexSeq = traverseReadonlyNonEmptyArrayWithIndexSeq;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndexSeq = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndexSeq)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndexSeq = traverseReadonlyArrayWithIndexSeq;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseSeqArrayWithIndex = exports.traverseReadonlyArrayWithIndexSeq;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseSeqArray = function (f) {\n    return (0, exports.traverseReadonlyArrayWithIndexSeq)(function (_, a) { return f(a); });\n};\nexports.traverseSeqArray = traverseSeqArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceSeqArray = \n/*#__PURE__*/ (0, exports.traverseSeqArray)(function_1.identity);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chainFirst = exports.tap;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `T.Functor` instead of `T.task`\n * (where `T` is from `import T from 'fp-ts/Task'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.task = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: exports.flatMap,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `T.Functor` instead of `T.taskSeq`\n * (where `T` is from `import T from 'fp-ts/Task'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.taskSeq = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apSeq,\n    chain: exports.flatMap,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getSemigroup = (0, Apply_1.getApplySemigroup)(exports.ApplySeq);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * Lift a monoid into 'Task', the inner values are concatenated using the provided `Monoid`.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getMonoid = (0, Applicative_1.getApplicativeMonoid)(exports.ApplicativeSeq);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.throwError = exports.of = exports.altW = exports.alt = exports.flatten = exports.flattenW = exports.flatMap = exports.apW = exports.ap = exports.mapLeft = exports.mapError = exports.bimap = exports.mapBoth = exports.map = exports.fromIOEitherK = exports.chainTaskOptionK = exports.chainTaskOptionKW = exports.fromTaskOptionK = exports.swap = exports.orLeft = exports.orElseFirstTaskK = exports.orElseFirstIOK = exports.tapError = exports.orElseW = exports.orElse = exports.chainNullableK = exports.fromNullableK = exports.fromNullable = exports.toUnion = exports.tryCatchK = exports.tryCatch = exports.getOrElseW = exports.getOrElse = exports.foldW = exports.matchEW = exports.fold = exports.matchE = exports.matchW = exports.match = exports.fromTaskOption = exports.fromIOEither = exports.fromEither = exports.fromTask = exports.fromIO = exports.leftIO = exports.rightIO = exports.leftTask = exports.rightTask = exports.right = exports.left = void 0;\nexports.fromPredicate = exports.chainFirstEitherKW = exports.chainFirstEitherK = exports.chainEitherKW = exports.chainEitherK = exports.flatMapTaskOption = exports.flatMapIOEither = exports.flatMapTask = exports.flatMapIO = exports.flatMapEither = exports.flatMapOption = exports.flatMapNullable = exports.liftOption = exports.liftNullable = exports.chainOptionKW = exports.chainOptionK = exports.fromOptionK = exports.fromOption = exports.Alt = exports.Bifunctor = exports.tapTask = exports.tapIO = exports.tapEither = exports.tap = exports.FromTask = exports.FromIO = exports.FromEither = exports.MonadThrow = exports.MonadTask = exports.MonadIO = exports.Monad = exports.Chain = exports.ApplicativeSeq = exports.ApplySeq = exports.ApplicativePar = exports.apSecondW = exports.apSecond = exports.apFirstW = exports.apFirst = exports.ApplyPar = exports.Pointed = exports.flap = exports.asUnit = exports.as = exports.Functor = exports.getFilterable = exports.getCompactable = exports.getAltTaskValidation = exports.getApplicativeTaskValidation = exports.URI = void 0;\nexports.getTaskValidation = exports.getSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.taskEitherSeq = exports.taskEither = exports.orElseFirstW = exports.orElseFirst = exports.chainFirstW = exports.chainFirst = exports.chainW = exports.chain = exports.sequenceSeqArray = exports.traverseSeqArray = exports.traverseSeqArrayWithIndex = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndexSeq = exports.traverseReadonlyNonEmptyArrayWithIndexSeq = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.let = exports.bindTo = exports.Do = exports.bracketW = exports.bracket = exports.taskify = exports.chainIOEitherK = exports.chainIOEitherKW = exports.chainFirstTaskK = exports.chainTaskK = exports.fromTaskK = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.fromEitherK = exports.filterOrElseW = exports.filterOrElse = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar chainable = __importStar(require(\"./Chain\"));\nvar Compactable_1 = require(\"./Compactable\");\nvar E = __importStar(require(\"./Either\"));\nvar ET = __importStar(require(\"./EitherT\"));\nvar Filterable_1 = require(\"./Filterable\");\nvar FromEither_1 = require(\"./FromEither\");\nvar FromIO_1 = require(\"./FromIO\");\nvar FromTask_1 = require(\"./FromTask\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar T = __importStar(require(\"./Task\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.left = ET.left(T.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.right = ET.right(T.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.rightTask = ET.rightF(T.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.leftTask = ET.leftF(T.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.rightIO = (0, function_1.flow)(T.fromIO, exports.rightTask);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.leftIO = (0, function_1.flow)(T.fromIO, exports.leftTask);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.7.0\n */\nexports.fromIO = exports.rightIO;\n/**\n * @category conversions\n * @since 2.7.0\n */\nexports.fromTask = exports.rightTask;\n/**\n * @category conversions\n * @since 2.0.0\n */\nexports.fromEither = T.of;\n/**\n * @category conversions\n * @since 2.0.0\n */\nexports.fromIOEither = T.fromIO;\n/**\n * @category conversions\n * @since 2.11.0\n */\nvar fromTaskOption = function (onNone) {\n    return T.map(E.fromOption(onNone));\n};\nexports.fromTaskOption = fromTaskOption;\n/**\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = \n/*#__PURE__*/ ET.match(T.Functor);\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchW = exports.match;\n/**\n * The `E` suffix (short for **E**ffect) means that the handlers return an effect (`Task`).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchE = ET.matchE(T.Monad);\n/**\n * Alias of [`matchE`](#matche).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.matchE;\n/**\n * Less strict version of [`matchE`](#matche).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchEW = exports.matchE;\n/**\n * Alias of [`matchEW`](#matchew).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchEW;\n/**\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = \n/*#__PURE__*/ ET.getOrElse(T.Monad);\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nexports.getOrElseW = exports.getOrElse;\n/**\n * Transforms a `Promise` that may reject to a `Promise` that never rejects and returns an `Either` instead.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { left, right } from 'fp-ts/Either'\n * import { tryCatch } from 'fp-ts/TaskEither'\n *\n * tryCatch(() => Promise.resolve(1), String)().then(result => {\n *   assert.deepStrictEqual(result, right(1))\n * })\n * tryCatch(() => Promise.reject('error'), String)().then(result => {\n *   assert.deepStrictEqual(result, left('error'))\n * })\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onRejected) {\n    return function () { return __awaiter(void 0, void 0, void 0, function () {\n        var reason_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, f().then(_.right)];\n                case 1: return [2 /*return*/, _a.sent()];\n                case 2:\n                    reason_1 = _a.sent();\n                    return [2 /*return*/, _.left(onRejected(reason_1))];\n                case 3: return [2 /*return*/];\n            }\n        });\n    }); };\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function returning a `Promise` to one returning a `TaskEither`.\n *\n * @category interop\n * @since 2.5.0\n */\nvar tryCatchK = function (f, onRejected) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.tryCatch)(function () { return f.apply(void 0, a); }, onRejected);\n    };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.toUnion = ET.toUnion(T.Functor);\n/**\n * @category conversions\n * @since 2.12.0\n */\nexports.fromNullable = ET.fromNullable(T.Pointed);\n/**\n * Use `liftNullable`.\n *\n * @category legacy\n * @since 2.12.0\n */\nexports.fromNullableK = ET.fromNullableK(T.Pointed);\n/**\n * Use `flatMapNullable`.\n *\n * @category legacy\n * @since 2.12.0\n */\nexports.chainNullableK = \n/*#__PURE__*/ ET.chainNullableK(T.Monad);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Returns `ma` if is a `Right` or the value returned by `onLeft` otherwise.\n *\n * See also [alt](#alt).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as TE from 'fp-ts/TaskEither'\n *\n * async function test() {\n *   const errorHandler = TE.orElse((error: string) => TE.right(`recovering from ${error}...`))\n *   assert.deepStrictEqual(await pipe(TE.right('ok'), errorHandler)(), E.right('ok'))\n *   assert.deepStrictEqual(await pipe(TE.left('ko'), errorHandler)(), E.right('recovering from ko...'))\n * }\n *\n * test()\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.orElse = \n/*#__PURE__*/ ET.orElse(T.Monad);\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nexports.orElseW = exports.orElse;\n/**\n * Returns an effect that effectfully \"peeks\" at the failure of this effect.\n *\n * @category error handling\n * @since 2.15.0\n */\nexports.tapError = (0, function_1.dual)(2, ET.tapError(T.Monad));\n/**\n * @category error handling\n * @since 2.12.0\n */\nvar orElseFirstIOK = function (onLeft) { return (0, exports.tapError)((0, exports.fromIOK)(onLeft)); };\nexports.orElseFirstIOK = orElseFirstIOK;\n/**\n * @category error handling\n * @since 2.12.0\n */\nvar orElseFirstTaskK = function (onLeft) { return (0, exports.tapError)((0, exports.fromTaskK)(onLeft)); };\nexports.orElseFirstTaskK = orElseFirstTaskK;\n/**\n * @category error handling\n * @since 2.11.0\n */\nexports.orLeft = \n/*#__PURE__*/ ET.orLeft(T.Monad);\n/**\n * @since 2.0.0\n */\nexports.swap = ET.swap(T.Functor);\n/**\n * @category lifting\n * @since 2.11.0\n */\nvar fromTaskOptionK = function (onNone) {\n    var from = (0, exports.fromTaskOption)(onNone);\n    return function (f) { return (0, function_1.flow)(f, from); };\n};\nexports.fromTaskOptionK = fromTaskOptionK;\n/**\n * Use `flatMapTaskOption`.\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category legacy\n * @since 2.12.3\n */\nvar chainTaskOptionKW = function (onNone) {\n    return function (f) {\n        return function (ma) {\n            return (0, exports.flatMap)(ma, (0, exports.fromTaskOptionK)(onNone)(f));\n        };\n    };\n};\nexports.chainTaskOptionKW = chainTaskOptionKW;\n/**\n * Use `flatMapTaskOption`.\n *\n * @category legacy\n * @since 2.11.0\n */\nexports.chainTaskOptionK = exports.chainTaskOptionKW;\n/**\n * @category lifting\n * @since 2.4.0\n */\nvar fromIOEitherK = function (f) { return (0, function_1.flow)(f, exports.fromIOEither); };\nexports.fromIOEitherK = fromIOEitherK;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _apPar = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\nvar _apSeq = function (fab, fa) { return (0, exports.flatMap)(fab, function (f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); }); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.0.0\n */\nexports.map = ET.map(T.Functor);\n/**\n * Returns a `TaskEither` whose failure and success channels have been mapped by the specified pair of functions, `f` and `g`.\n *\n * @example\n * import * as TaskEither from 'fp-ts/TaskEither'\n * import * as Either from 'fp-ts/Either'\n *\n * const f = (s: string) => new Error(s)\n * const g = (n: number) => n * 2\n *\n * async function test() {\n *   assert.deepStrictEqual(await TaskEither.mapBoth(TaskEither.right(1), f, g)(), Either.right(2))\n *   assert.deepStrictEqual(await TaskEither.mapBoth(TaskEither.left('err'), f, g)(), Either.left(new Error('err')))\n * }\n *\n * test()\n *\n * @category error handling\n * @since 2.16.0\n */\nexports.mapBoth = (0, function_1.dual)(3, ET.mapBoth(T.Functor));\n/**\n * Alias of `mapBoth`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.bimap = exports.mapBoth;\n/**\n * Returns a `TaskEither` with its error channel mapped using the specified function.\n *\n * @example\n * import * as TaskEither from 'fp-ts/TaskEither'\n * import * as Either from 'fp-ts/Either'\n *\n * const f = (s: string) => new Error(s)\n *\n * async function test() {\n *   assert.deepStrictEqual(await TaskEither.mapError(TaskEither.right(1), f)(), Either.right(1))\n *   assert.deepStrictEqual(await TaskEither.mapError(TaskEither.left('err'), f)(), Either.left(new Error('err')))\n * }\n *\n * test()\n *\n * @category error handling\n * @since 2.16.0\n */\nexports.mapError = (0, function_1.dual)(2, ET.mapError(T.Functor));\n/**\n * Alias of `mapError`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.mapLeft = exports.mapError;\n/**\n * @since 2.0.0\n */\nexports.ap = \n/*#__PURE__*/ ET.ap(T.ApplyPar);\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nexports.apW = exports.ap;\n/**\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, ET.flatMap(T.Monad));\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexports.flattenW = \n/*#__PURE__*/ (0, exports.flatMap)(function_1.identity);\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.flattenW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `TaskEither` returns `fa` if is a `Right` or the value returned by `that` otherwise.\n *\n * See also [orElse](#orelse).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as TE from 'fp-ts/TaskEither'\n *\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.right(1),\n *       TE.alt(() => TE.right(2))\n *     )(),\n *     E.right(1)\n *   )\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.left('a'),\n *       TE.alt(() => TE.right(2))\n *     )(),\n *     E.right(2)\n *   )\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.left('a'),\n *       TE.alt(() => TE.left('b'))\n *     )(),\n *     E.left('b')\n *   )\n * }\n *\n * test()\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = \n/*#__PURE__*/ ET.alt(T.Monad);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nexports.altW = exports.alt;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.of = exports.right;\n/**\n * @since 2.7.0\n */\nexports.throwError = exports.left;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'TaskEither';\n/**\n * The default [`ApplicativePar`](#applicativepar) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n * import * as T from 'fp-ts/Task'\n * import * as TE from 'fp-ts/TaskEither'\n *\n * interface User {\n *   readonly id: string\n *   readonly name: string\n * }\n *\n * const remoteDatabase: ReadonlyArray<User> = [\n *   { id: 'id1', name: 'John' },\n *   { id: 'id2', name: 'Mary' },\n *   { id: 'id3', name: 'Joey' }\n * ]\n *\n * const fetchUser = (id: string): TE.TaskEither<string, User> =>\n *   pipe(\n *     remoteDatabase,\n *     RA.findFirst((user) => user.id === id),\n *     TE.fromOption(() => `${id} not found`)\n *   )\n *\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(['id4', 'id5'], RA.traverse(TE.ApplicativePar)(fetchUser))(),\n *     E.left('id4 not found') // <= first error\n *   )\n *\n *   const Applicative = TE.getApplicativeTaskValidation(\n *     T.ApplyPar,\n *     pipe(string.Semigroup, S.intercalate(', '))\n *   )\n *\n *   assert.deepStrictEqual(\n *     await pipe(['id4', 'id5'], RA.traverse(Applicative)(fetchUser))(),\n *     E.left('id4 not found, id5 not found') // <= all errors\n *   )\n * }\n *\n * test()\n *\n * @category error handling\n * @since 2.7.0\n */\nfunction getApplicativeTaskValidation(A, S) {\n    var ap = (0, Apply_1.ap)(A, E.getApplicativeValidation(S));\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return (0, function_1.pipe)(fab, ap(fa)); },\n        of: exports.of\n    };\n}\nexports.getApplicativeTaskValidation = getApplicativeTaskValidation;\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * See [`getAltValidation`](./Either.ts.html#getaltvalidation).\n *\n * @category error handling\n * @since 2.7.0\n */\nfunction getAltTaskValidation(S) {\n    var alt = ET.altValidation(T.Monad, S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        alt: function (fa, that) { return (0, function_1.pipe)(fa, alt(that)); }\n    };\n}\nexports.getAltTaskValidation = getAltTaskValidation;\n/**\n * @category filtering\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var C = E.getCompactable(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: (0, Compactable_1.compact)(T.Functor, C),\n        separate: (0, Compactable_1.separate)(T.Functor, C, E.Functor)\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * @category filtering\n * @since 2.1.0\n */\nfunction getFilterable(M) {\n    var F = E.getFilterable(M);\n    var C = (0, exports.getCompactable)(M);\n    var filter = (0, Filterable_1.filter)(T.Functor, F);\n    var filterMap = (0, Filterable_1.filterMap)(T.Functor, F);\n    var partition = (0, Filterable_1.partition)(T.Functor, F);\n    var partitionMap = (0, Filterable_1.partitionMap)(T.Functor, F);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: C.compact,\n        separate: C.separate,\n        filter: function (fa, predicate) { return (0, function_1.pipe)(fa, filter(predicate)); },\n        filterMap: function (fa, f) { return (0, function_1.pipe)(fa, filterMap(f)); },\n        partition: function (fa, predicate) { return (0, function_1.pipe)(fa, partition(predicate)); },\n        partitionMap: function (fa, f) { return (0, function_1.pipe)(fa, partitionMap(f)); }\n    };\n}\nexports.getFilterable = getFilterable;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Maps the `Right` value of this `TaskEither` to the specified constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.as = (0, function_1.dual)(2, (0, Functor_1.as)(exports.Functor));\n/**\n * Maps the `Right` value of this `TaskEither` to the void constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.asUnit = (0, Functor_1.asUnit)(exports.Functor);\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * Runs computations in parallel.\n *\n * @category instances\n * @since 2.10.0\n */\nexports.ApplyPar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.ApplyPar);\n/**\n * Less strict version of [`apFirst`](#apfirst).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apFirstW = exports.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.ApplyPar);\n/**\n * Less strict version of [`apSecond`](#apsecond).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apSecondW = exports.apSecond;\n/**\n * Runs computations in parallel.\n *\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativePar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    of: exports.of\n};\n/**\n * Runs computations sequentially.\n *\n * @category instances\n * @since 2.10.0\n */\nexports.ApplySeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq\n};\n/**\n * Runs computations sequentially.\n *\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativeSeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: exports.flatMap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: exports.flatMap,\n    of: exports.of,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadTask = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: exports.flatMap,\n    of: exports.of,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: exports.flatMap,\n    of: exports.of,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: exports.URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category combinators\n * @since 2.15.0\n */\nexports.tap = (0, function_1.dual)(2, chainable.tap(exports.Chain));\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as TE from 'fp-ts/TaskEither'\n *\n * const checkString = (value: string) => pipe(\n *   TE.of(value),\n *   TE.tapEither(() => value.length > 0 ? E.right('ok') : E.left('error'))\n * )\n *\n * async function test() {\n *   assert.deepStrictEqual(await checkString('')(), E.left('error'))\n *   assert.deepStrictEqual(await checkString('fp-ts')(), E.right('fp-ts'))\n * }\n *\n * test()\n *\n * @category combinators\n * @since 2.16.0\n */\nexports.tapEither = (0, function_1.dual)(2, (0, FromEither_1.tapEither)(exports.FromEither, exports.Chain));\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as TE from 'fp-ts/TaskEither'\n * import * as E from 'fp-ts/Either'\n * import * as Console from 'fp-ts/Console'\n *\n *\n * // Will produce `Hello, fp-ts` to the stdout\n * const effectA = TE.tapIO(\n *   TE.of(1),\n *   (value) => Console.log(`Hello, ${value}`)\n * )\n *\n * // No output to the stdout\n * const effectB = pipe(\n *   TE.left('error'),\n *   TE.tapIO((value) => Console.log(`Hello, ${value}`))\n * )\n *\n * async function test() {\n *   assert.deepStrictEqual(await effectA(), E.of(1))\n *   assert.deepStrictEqual(await effectB(), E.left('error'))\n * }\n *\n * test()\n *\n * @category combinators\n * @since 2.16.0\n */\nexports.tapIO = (0, function_1.dual)(2, (0, FromIO_1.tapIO)(exports.FromIO, exports.Chain));\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as TE from 'fp-ts/TaskEither'\n * import * as T from 'fp-ts/Task'\n * import * as E from 'fp-ts/Either'\n *\n *\n * const effect = TE.tapIO(\n *   TE.of(1),\n *   (value) => T.of(value + 1)\n * )\n *\n * async function test() {\n *   assert.deepStrictEqual(await effect(), E.of(1))\n * }\n *\n * test()\n *\n * @category combinators\n * @since 2.16.0\n */\nexports.tapTask = (0, function_1.dual)(2, (0, FromTask_1.tapTask)(exports.FromTask, exports.Chain));\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: exports.mapBoth,\n    mapLeft: exports.mapError\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category conversions\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/ (0, FromEither_1.fromOption)(exports.FromEither);\n/**\n * Use `liftOption`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/ (0, FromEither_1.fromOptionK)(exports.FromEither);\n/**\n * Use `flatMapOption`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.chainOptionK = (0, FromEither_1.chainOptionK)(exports.FromEither, exports.Chain);\n/**\n * Use `flatMapOption`.\n *\n * @category legacy\n * @since 2.13.2\n */\nexports.chainOptionKW = \n/*#__PURE__*/ exports.chainOptionK;\n/** @internal */\nvar _FromEither = {\n    fromEither: exports.FromEither.fromEither\n};\n/**\n * @category lifting\n * @since 2.15.0\n */\nexports.liftNullable = _.liftNullable(_FromEither);\n/**\n * @category lifting\n * @since 2.15.0\n */\nexports.liftOption = _.liftOption(_FromEither);\n/** @internal */\nvar _FlatMap = {\n    flatMap: exports.flatMap\n};\n/** @internal */\nvar _FromIO = {\n    fromIO: exports.FromIO.fromIO\n};\n/** @internal */\nvar _FromTask = {\n    fromTask: exports.fromTask\n};\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexports.flatMapNullable = _.flatMapNullable(_FromEither, _FlatMap);\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexports.flatMapOption = _.flatMapOption(_FromEither, _FlatMap);\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexports.flatMapEither = _.flatMapEither(_FromEither, _FlatMap);\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexports.flatMapIO = _.flatMapIO(_FromIO, _FlatMap);\n/**\n * @category sequencing\n * @since 2.16.0\n */\nexports.flatMapTask = _.flatMapTask(_FromTask, _FlatMap);\n/**\n * @category sequencing\n * @since 2.16.0\n */\nexports.flatMapIOEither = (0, function_1.dual)(2, function (self, f) {\n    return (0, exports.flatMap)(self, (0, exports.fromIOEitherK)(f));\n});\n/**\n * @category sequencing\n * @since 2.16.0\n */\nexports.flatMapTaskOption = (0, function_1.dual)(3, function (self, f, onNone) {\n    return (0, exports.flatMap)(self, function (a) { return (0, exports.fromTaskOption)(function () { return onNone(a); })(f(a)); });\n});\n/**\n * Alias of `flatMapEither`.\n *\n * @category legacy\n * @since 2.4.0\n */\nexports.chainEitherK = exports.flatMapEither;\n/**\n * Alias of `flatMapEither`.\n *\n * @category legacy\n * @since 2.6.1\n */\nexports.chainEitherKW = exports.flatMapEither;\n/**\n * Alias of `tapEither`.\n *\n * @category legacy\n * @since 2.12.0\n */\nexports.chainFirstEitherK = exports.tapEither;\n/**\n * Alias of `tapEither`.\n *\n * Less strict version of [`chainFirstEitherK`](#chainfirsteitherk).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category legacy\n * @since 2.12.0\n */\nexports.chainFirstEitherKW = exports.tapEither;\n/**\n * @category lifting\n * @since 2.0.0\n */\nexports.fromPredicate = (0, FromEither_1.fromPredicate)(exports.FromEither);\n/**\n * @category filtering\n * @since 2.0.0\n */\nexports.filterOrElse = (0, FromEither_1.filterOrElse)(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * @category lifting\n * @since 2.4.0\n */\nexports.fromEitherK = (0, FromEither_1.fromEitherK)(exports.FromEither);\n/**\n * @category lifting\n * @since 2.10.0\n */\nexports.fromIOK = (0, FromIO_1.fromIOK)(exports.FromIO);\n/**\n * Alias of `flatMapIO`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.chainIOK = exports.flatMapIO;\n/**\n * Alias of `tapIO`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.chainFirstIOK = exports.tapIO;\n/**\n * @category lifting\n * @since 2.10.0\n */\nexports.fromTaskK = (0, FromTask_1.fromTaskK)(exports.FromTask);\n/**\n * Alias of `flatMapTask`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.chainTaskK = exports.flatMapTask;\n/**\n * Alias of `tapTask`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.chainFirstTaskK = exports.tapTask;\n/**\n * Alias of `flatMapIOEither`.\n *\n * Less strict version of [`chainIOEitherK`](#chainioeitherk).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category legacy\n * @since 2.6.1\n */\nexports.chainIOEitherKW = exports.flatMapIOEither;\n/**\n * Alias of `flatMapIOEither`.\n *\n * @category legacy\n * @since 2.4.0\n */\nexports.chainIOEitherK = exports.flatMapIOEither;\nfunction taskify(f) {\n    return function () {\n        var args = Array.prototype.slice.call(arguments);\n        return function () {\n            return new Promise(function (resolve) {\n                var cbResolver = function (e, r) { return (e != null ? resolve(_.left(e)) : resolve(_.right(r))); };\n                f.apply(null, args.concat(cbResolver));\n            });\n        };\n    };\n}\nexports.taskify = taskify;\n/**\n * Make sure that a resource is cleaned up in the event of an exception (\\*). The release action is called regardless of\n * whether the body action throws (\\*) or returns.\n *\n * (\\*) i.e. returns a `Left`\n *\n * @since 2.0.0\n */\nvar bracket = function (acquire, use, release) { return (0, exports.bracketW)(acquire, use, release); };\nexports.bracket = bracket;\n/**\n * Less strict version of [`bracket`](#bracket).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nvar bracketW = function (acquire, use, release) {\n    return (0, exports.flatMap)(acquire, function (a) { return T.flatMap(use(a), function (e) { return (0, exports.flatMap)(release(a, e), function () { return T.of(e); }); }); });\n};\nexports.bracketW = bracketW;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = chainable.bind(exports.Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.ApplyPar);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return (0, function_1.flow)(T.traverseReadonlyNonEmptyArrayWithIndex(f), T.map(E.traverseReadonlyNonEmptyArrayWithIndex(function_1.SK)));\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndexSeq = function (f) {\n    return function (as) {\n        return function () {\n            return _.tail(as).reduce(function (acc, a, i) {\n                return acc.then(function (ebs) {\n                    return _.isLeft(ebs)\n                        ? acc\n                        : f(i + 1, a)().then(function (eb) {\n                            if (_.isLeft(eb)) {\n                                return eb;\n                            }\n                            ebs.right.push(eb.right);\n                            return ebs;\n                        });\n                });\n            }, f(0, _.head(as))().then(E.map(_.singleton)));\n        };\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndexSeq = traverseReadonlyNonEmptyArrayWithIndexSeq;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndexSeq = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndexSeq)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndexSeq = traverseReadonlyArrayWithIndexSeq;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseSeqArrayWithIndex = exports.traverseReadonlyArrayWithIndexSeq;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseSeqArray = function (f) { return (0, exports.traverseReadonlyArrayWithIndexSeq)(function (_, a) { return f(a); }); };\nexports.traverseSeqArray = traverseSeqArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativeSeq)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceSeqArray = \n/*#__PURE__*/ (0, exports.traverseSeqArray)(function_1.identity);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.6.0\n */\nexports.chainW = exports.flatMap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chainFirst = exports.tap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.8.0\n */\nexports.chainFirstW = exports.tap;\n/**\n * Alias of `tapError`.\n *\n * @category legacy\n * @since 2.11.0\n */\nexports.orElseFirst = exports.tapError;\n/**\n * Alias of `tapError`.\n *\n * @category legacy\n * @since 2.11.0\n */\nexports.orElseFirstW = exports.tapError;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `TE.Functor` instead of `TE.taskEither`\n * (where `TE` is from `import TE from 'fp-ts/TaskEither'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.taskEither = {\n    URI: exports.URI,\n    bimap: exports.mapBoth,\n    mapLeft: exports.mapError,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: exports.flatMap,\n    alt: _alt,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask,\n    throwError: exports.throwError\n};\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `TE.Functor` instead of `TE.taskEitherSeq`\n * (where `TE` is from `import TE from 'fp-ts/TaskEither'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.taskEitherSeq = {\n    URI: exports.URI,\n    bimap: exports.mapBoth,\n    mapLeft: exports.mapError,\n    map: _map,\n    of: exports.of,\n    ap: _apSeq,\n    chain: exports.flatMap,\n    alt: _alt,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/ (0, Apply_1.getApplySemigroup)(exports.ApplySeq);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/ (0, Applicative_1.getApplicativeMonoid)(exports.ApplicativeSeq);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getSemigroup = function (S) {\n    return (0, Apply_1.getApplySemigroup)(T.ApplySeq)(E.getSemigroup(S));\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Use [`getApplicativeTaskValidation`](#getapplicativetaskvalidation) and [`getAltTaskValidation`](#getalttaskvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getTaskValidation(SE) {\n    var applicativeTaskValidation = getApplicativeTaskValidation(T.ApplicativePar, SE);\n    var altTaskValidation = getAltTaskValidation(SE);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: applicativeTaskValidation.ap,\n        of: exports.of,\n        chain: exports.flatMap,\n        bimap: exports.mapBoth,\n        mapLeft: exports.mapError,\n        alt: altTaskValidation.alt,\n        fromIO: exports.fromIO,\n        fromTask: exports.fromTask,\n        throwError: exports.throwError\n    };\n}\nexports.getTaskValidation = getTaskValidation;\n"],
  "mappings": "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",
  "names": ["compare", "first", "_", "left", "right", "ma", "_", "ma", "_", "_", "_"]
}
